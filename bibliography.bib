@phdthesis{Choi2016,
    abstract = {2016 High-level synthesis (HLS) can automatically synthesize software to hardware. With the design speci-fication in software, HLS can reduce the lengthy design cycles of hardware, and make the performance and energy-efficiency benefits of hardware accessible to those without hardware skills. Since the introduction of the first C-based HLS tools more than a decade ago [49], however, the adaption of the technology has been slow by both software and hardware engineers. We attribute this to two key factors: 1) For hardware engineers, there is still a gap between HLS-generated hardware and human-designed hardware, partly due to the inability of HLS tools to fully exploit hardware parallelism, and 2) for software engineers, HLS remains to be a difficult endeavour, as many parts of the design, such as system integration, largely remain a manual process. This dissertation provides an HLS framework, LegUp, which seeks to address both issues. LegUp can compile an entire software program to hardware to produce a hardware-only system, or it can also automatically partition the program to generate a processor-accelerator hybrid system, wherein the compute-intensive program segments are accelerated by hardware, with the remaining segments exe-cuted in software on a processor. In both cases, a complete system is generated, including necessary memories and interconnect. To allow one to easily exploit hardware parallelism, we provide HLS sup-port for synthesizing parallel software to parallel hardware. In particular, we support automatically compiling a multi-threaded program with Pthreads and OpenMP to parallel hardware accelerators that operate concurrently within a hardware-only or a processor-accelerator hybrid system. In the context of parallel hardware, we investigate architectural and memory optimizations that help to improve cir-cuit performance and area, and discuss a method of using the producer-consumer pattern in software to infer a streaming circuit in hardware. With these techniques, we show that LegUp can produce high-performance hardware that can be competitive to circuits that are generated by commercial HLS tools, and demonstrate that LegUp-generated circuits can also outperform software executing on x86 processors. ii Acknowledgements},
    author = {Choi, Jongsok},
    isbn = {9781479921980},
    mendeley-groups = {Artigo},
    title = {{From Software Threads to Parallel Hardware with LegUp High-Level Synthesis}},
    
    year = {2016}
}

@inproceedings{obeidat2011microblaze,
    title={Microblaze: an application-independent fpga-based profiler},
    author={Obeidat, Fadi and Klenke, Robert},
    booktitle={Proceedings of the 19th ACM/SIGDA international symposium on Field programmable gate arrays},
    pages={283--283},
    year={2011},
    organization={ACM}
}

@article{gao2015empirical,
    title={An empirical study of wearable technology acceptance in healthcare},
    author={Gao, Yiwen and Li, He and Luo, Yan},
    journal={Industrial Management \& Data Systems},
    volume={115},
    number={9},
    pages={1704--1723},
    year={2015},
    publisher={Emerald Group Publishing Limited}
}


@article{billinghurst1999wearable,
    title={Wearable devices: new ways to manage information},
    author={Billinghurst, Mark and Starner, Thad},
    journal={Computer},
    volume={32},
    number={1},
    pages={57--64},
    year={1999},
    publisher={IEEE}
}


@inproceedings{2016information,
    author = {Lee, Linda and Lee, Joonghwa and Egelman, Serge and Wagner, David},
    booktitle = {NDSS Workshop on Usable Security (USEC)},
    title = {{Information Disclosure Concerns in The Age of Wearable Computing}},
    year = {2014}
}
@inproceedings{Graham1982,
    abstract = {Large complex programs are composed of many small routines that implement abstractions for the routines that call them. To be useful, an execution profiler must attribute execution time in a way that is significant for the logical structure of a program as well as for its textual decomposition. This data must then be displayed to the user in a convenient and informative way. The gprof profiler accounts for the running time of called routines in the running time of the routines that call them. The design and use of this profiler is described.},
    address = {New York, New York, USA},
    author = {Graham, Susan L. and Kessler, Peter B. and Mckusick, Marshall K.},
    booktitle = {Proceedings of the 1982 SIGPLAN symposium on Compiler construction},
    publisher = {ACM Press},
    title = {{Gprof}},
    year = {1982}
}
@article{Cong2009,
    abstract = {Lithography simulation, an essential step in design for manufacturability (DFM), is still far from computationally efficient. Most leading companies use large clusters of server computers to achieve acceptable turn-around time. Thus coprocessor acceleration is very attractive for obtaining increased computational performance with a reduced power consumption. This article describes the implementation of a customized accelerator on FPGA using a polygon-based simulation model. An application-specific memory partitioning scheme is designed to meet the bandwidth requirements for a large number of processing elements. Deep loop pipelining and ping-pong buffer based function block pipelining are also implemented in our design. Initial results show a 15X speedup versus the software implementation running on a microprocessor, and more speedup is expected via further performance tuning. The implementation also leverages state-of-art C-to-RTL synthesis tools. At the same time, we also identify the need for manual architecture-level exploration for parallel implementations. Moreover, we implement the algorithm on NVIDIA GPUs using the CUDA programming environment, and provide some useful comparisons for different kinds of accelerators.},
    author = {Cong, Jason and Zou, Yi},
    doi = {10.1145/1575774.1575776},
    isbn = {9781595939340},
    issn = {19367406},
    journal = {ACM Transactions on Reconfigurable Technology and Systems},
    keywords = {FPGA,Lithography simulation,coprocessor acceleration},
    mendeley-groups = {Artigo},
    number = {3},
    pages = {1--29},
    publisher = {ACM},
    title = {{FPGA-Based Hardware Acceleration of Lithographic Aerial Image Simulation}},
    
    volume = {2},
    year = {2009}
}
@article{Canis2011,
    abstract = {In this paper, we introduce a new open source high-level synthesis tool called LegUp that allows software techniques to be used for hardware design. LegUp accepts a standard C program as input and automatically compiles the program to a hybrid architecture containing an FPGA-based MIPS soft processor and custom hardware accelerators that communicate through a standard bus interface. Results show that the tool produces hardware solutions of comparable quality to a commercial high-level synthesis tool.},
    archivePrefix = {arXiv},
    arxivId = {arXiv:1502.07526v1},
    author = {Canis, Andrew and Choi, Jongsok and Aldham, Mark and Zhang, Victor and Kammoona, Ahmed and Anderson, Jason H. and Brown, Stephen and Czajkowski, Tomasz},
    doi = {10.1145/1950413.1950423},
    eprint = {arXiv:1502.07526v1},
    isbn = {9781450305549},
    issn = {15399087},
    journal = {Proceedings of the 19th ACM/SIGDA International Symposium on Field Programmable Gate Arrays},
    mendeley-groups = {Artigo},
    pages = {33},
    pmid = {1000285845},
    title = {{LegUp}},
    
    year = {2011}
}
@inproceedings{Zhang2008a,
    abstract = {FPGAs are becoming an attractive platform for accelerating many computations including scientific applications. However, their adoption has been limited by the large development cost and short life span of FPGA designs. We believe that FPGA-based scientific computation would become far more practical if there were hardware libraries that were portable to any FPGA with performance that could scale with the resources of the FPGA. To illustrate this idea we have implemented one common supercomputing library function: the LU factorization method for solving linear systems. This paper discusses issues in making the design both portable and scalable. The design is automatically generated to match the FPGApsilas capabilities and external memory through the use of parameters. We compared the performance of the design on the FPGA to a single processor core and found that it performs 2.2 times faster, and that the energy dissipated per computation is a factor 5 times less.},
    author = {Zhang, Wei and Betz, Vaughn and Rose, Jonathan},
    booktitle = {Proceedings of the 2008 International Conference on Field-Programmable Technology, ICFPT 2008},
    doi = {10.1109/FPT.2008.4762361},
    isbn = {9781424427963},
    issn = {19367406},
    keywords = {FPGA,LU decomposition,acceleration,linear system solver,portable,scalable},
    publisher = {ACM},
    title = {{Portable and scalable FPGA-based acceleration of a direct linear system solver}},
    year = {2008}
}
@article{Arato2005,
    abstract = {One of the most crucial steps in the design of embedded systems is hardware/software partitioning, is, deciding which components of the system should be implemented in hardware and which ones in software. Most formulations of the hardware/software partitioning problem are MP-hard, so the majority-of research efforts on hardware/software partitioning has focused on developing efficient heuristics. This article considers the combinatorial structure behind hardware/software partitioning. Two similar versions of the partitioning problem are defined, one of which turns out to be NP-hard, whereas the other one can be solved in polynomial time. This helps in understanding the real cause of complexity in hardware/software partitioning. Moreover, the polynomial-time algorithm serves as the basis for a highly efficient novel heuristic for the NP-hard version of the problem. Unlike general-purpose heuristics such as genetic algorithms or simulated annealing, this heuristic makes use of problem-specific knowledge, and can thus find high-quality solutions rapidly. Moreover, it has the unique characteristic that it also calculates lower bounds on the optimum solution. It is demonstrated on several benchmarks and also large random examples that the new algorithm clearly outperforms other heuristics that are generally applied to hardware/software partitioning.},
    author = {Arat{\'{o}}, P{\'{e}}ter and Mann, Zolt{\'{a}}n {\'{A}}d{\'{a}}m and Orb{\'{a}}n, Andr{\'{a}}s},
    doi = {10.1145/1044111.1044119},
    issn = {10844309},
    journal = {ACM Transactions on Design Automation of Electronic Systems},
    mendeley-groups = {Artigo},
    number = {1},
    pages = {136--156},
    title = {{Algorithmic aspects of hardware/software partitioning}},
    
    volume = {10},
    year = {2005}
}
@inproceedings{fanelli2010prototype,
    title={Prototype of a wearable system for remote fetal monitoring during pregnancy},
    author={Fanelli, Andrea and Ferrario, Manuela and Piccini, Luca and Andreoni, Giuseppe and Matrone, Giulia and Magenes, Giovanni and Signorini, Maria G},
    booktitle={Engineering in Medicine and Biology Society (EMBC), 2010 Annual International Conference of the IEEE},
    pages={5815--5818},
    year={2010},
    organization={IEEE}
}

@article{dunston2005mixed,
    title={Mixed reality-based visualization interfaces for architecture, engineering, and construction industry},
    author={Dunston, Phillip S and Wang, Xiangyu},
    journal={Journal of construction engineering and management},
    volume={131},
    number={12},
    pages={1301--1309},
    year={2005},
    publisher={American Society of Civil Engineers}
}

@inproceedings{Klasnja:2008:UWS:1409635.1409656,
    author = {Klasnja, Predrag and Harrison, Beverly L. and LeGrand, Louis and LaMarca, Anthony and Froehlich, Jon and Hudson, Scott E.},
    title = {Using Wearable Sensors and Real Time Inference to Understand Human Recall of Routine Activities},
    booktitle = {Proceedings of the 10th International Conference on Ubiquitous Computing},
    series = {UbiComp '08},
    year = {2008},
    isbn = {978-1-60558-136-1},
    location = {Seoul, Korea},
    pages = {154--163},
    numpages = {10},
    url = {http://doi.acm.org/10.1145/1409635.1409656},
    doi = {10.1145/1409635.1409656},
    acmid = {1409656},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {ESM, empirical evaluation, experience sampling method, recall accuracy, self-reports, survey frequency, user study},
} 
@article{lmberis2007advanced,
    title={Advanced wearable health systems and applications-research and development efforts in the European Union},
    author={Lmberis, Andreas and Dittmar, Andre},
    journal={IEEE Engineering in Medicine and Biology Magazine},
    volume={26},
    number={3},
    pages={29--33},
    year={2007},
    publisher={IEEE}
}

@book{tocci2003sistemas,
    author = {Tocci, Ronald J and Widmer, Neal S and Moss, Gregory L},
    mendeley-groups = {Artigo},
    publisher = {Prentice Hall},
    title = {{Sistemas digitais: princípios e aplica{\c{c}}{\~{o}}es}},
    volume = {11},
    year = {2011}
}
@article{rosinger2004connecting,
    title={Connecting customized IP to the MicroBlaze soft processor using the Fast Simplex Link (FSL) channel},
    author={Rosinger, Hans-Peter},
    journal={Xilinx Application Note},
    year={2004}
}

@article{demarco2011real,
    title={Real-Time Computer Vision Processing on a Wearable System},
    author={DeMarco, Kevin},
    journal={Real-Time Systems},
    year={2011}
}

@article{kranenburg2009reference,
    title={Reference design of a portable and customizable microprocessor for rapid system prototyping},
    author={Kranenburg, T},
    journal={Master's thesis, Delft University of Technology},
    year={2009}
}

@inproceedings{kranenburg2010mb,
    title={MB-LITE: A robust, light-weight soft-core implementation of the MicroBlaze architecture},
    author={Kranenburg, Tamar and Van Leuken, Rene},
    booktitle={Proceedings of the Conference on Design, Automation and Test in Europe},
    pages={997--1000},
    year={2010},
    organization={European Design and Automation Association}
}

@inproceedings{xu2008multi,
    title={A multi-microblaze based SOC system: from SystemC modeling to FPGA prototyping},
    author={Xu, Susan and Pollitt-Smith, Hugh},
    booktitle={Rapid System Prototyping, 2008. RSP'08. The 19th IEEE/IFIP International Symposium on},
    pages={121--127},
    year={2008},
    organization={IEEE}
}

@book{coffman1999real,
    title={Real world FPGA design with Verilog},
    author={Coffman, Ken},
    year={1999},
    publisher={Pearson Education}
}

@article{chan2012smart,
    title={Smart wearable systems: Current status and future challenges},
    author={Chan, Marie and Est{\`e}ve, Daniel and Fourniols, Jean-Yves and Escriba, Christophe and Campo, Eric},
    journal={Artificial intelligence in medicine},
    volume={56},
    number={3},
    pages={137--156},
    year={2012},
    publisher={Elsevier}
}

@inproceedings{lawo2007industrial,
    title={An industrial case study on wearable computing applications},
    author={Lawo, Michael and Herzog, Otthein and Witt, Hendrik},
    booktitle={Proceedings of the 9th international conference on Human computer interaction with mobile devices and services},
    pages={448--451},
    year={2007},
    organization={ACM}
}

@article{starner1996human,
    title={Human-powered wearable computing},
    author={Starner, Thad},
    journal={IBM systems Journal},
    volume={35},
    number={3/4},
    pages={618--629},
    year={1996}
}

@inproceedings{cornelius2014wearable,
    title={A wearable system that knows who wears it},
    author={Cornelius, Cory and Peterson, Ronald and Skinner, Joseph and Halter, Ryan and Kotz, David},
    booktitle={Proceedings of the 12th annual international conference on Mobile systems, applications, and services},
    pages={55--67},
    year={2014},
    organization={ACM}
}

@inproceedings{merkouris2015introducing,
    title={Introducing computer programming to children through robotic and wearable devices},
    author={Merkouris, Alexandros and Chorianopoulos, Konstantinos},
    booktitle={Proceedings of the Workshop in Primary and Secondary Computing Education},
    pages={69--72},
    year={2015},
    organization={ACM}
}


@article{arias2015privacy,
    title={Privacy and security in internet of things and wearable devices},
    author={Arias, Orlando and Wurm, Jacob and Hoang, Khoa and Jin, Yier},
    journal={IEEE Transactions on Multi-Scale Computing Systems},
    volume={1},
    number={2},
    pages={99--109},
    year={2015},
    publisher={IEEE}
}



@article{Jozwiak2017,
    abstract = {The recent spectacular progress in the microelectronic, information, communication, material and sensor technologies created a big stimulus towards development of smart communicating cyber-physical systems (CPS) and Internet of Things (IoT). CPS and IoT are undergoing an explosive growth to a large degree related to advanced mobile systems like smart automotive and avionic systems, mobile robots and wearable devices. The huge and rapidly developing markets of sophisticated mobile cyber-physical systems represent great opportunities, but these opportunities come with a price of unusual system complexity, as well as, stringent and difficult to satisfy requirements of many modern applications. Specifically, smart cars and various wearable systems to a growing degree involve big instant data from multiple complex sensors or other systems, and are required to provide continuous autonomous service in a long time. In consequence, they demand a guaranteed (ultra-)high performance and/or (ultra-)low energy consumption, while requiring a high reliability, safety and security. To adequately address these demands, sophisticated embedded computing and embedded design technologies are needed. After an introduction to modern mobile systems, this paper discusses the huge heterogeneous area of these systems, and considers serious issues and challenges in their design. Subsequently, it discusses the embedded computing and design technologies needed to adequately address the issues and overcome the challenges in order to satisfy the stringent requirements of the modern mobile systems.},
    author = {J{\'{o}}{\'{z}}wiak, Lech},
    doi = {10.1016/j.micpro.2017.03.008},
    isbn = {01419331 (ISSN)},
    issn = {01419331},
    journal = {Microprocessors and Microsystems},
    keywords = {Automated design technology,Cyber-physical systems,Heterogeneous systems,Massively parallel systems,Mobile systems,Multi-processor systems on a chip},
    mendeley-groups = {Artigo},
    pages = {1339--1351},
    title = {{Advanced mobile and wearable systems}},
    volume = {50},
    year = {2017}
}
@book{Richardson2013,
    abstract = {Many people think of Linux as a computer operating system, running on users' desktops and powering servers. But Linux can also be found inside many consumer electronics devices. Whether they're the brains of a cell phone, cable box, or exercise bike, embedded Linux systems blur the distinction between computer and device. Many makers love microcontroller platforms such as Arduino, but as the complexity increases in their projects, they need more power for applications, such as computer vision. The BeagleBone is an embedded Linux board for makers. It's got built-in networking, many inputs and outputs, and a fast processor to handle demanding tasks. This book introduces you to both the original BeagleBone and the new BeagleBone Black and gets you started with projects that take advantage of the board's processing power and its ability to interface with the outside world.},
    author = {Richardson, Matt},
    isbn = {1449345336},
    mendeley-groups = {Artigo},
    pages = {142},
    title = {{Getting Started with BeagleBone: Linux-Powered Electronic Projects With Python and JavaScript}},
    
    year = {2013}
}
@article{Gemperle1998,
    abstract = {Digital Technology is constantly improving as information becomes wireless. These advances demand more wearable and mobile form factors for products that access information. A product that is wearable should have wearability. This paper explores the concept of dynamic wearability, through design research. Wearability is defined as the interaction between the human body and the wearable object. Dynamic wearability extends that definition to include the human body in motion. Our research has been to locate, understand, and define the spaces on the human body where solid and flexible forms can rest-without interfering with fluid human movement. The result is a set of design guidelines embodied in a set of wearable forms. These wearable forms describe the three dimensional spaces on the body best suited for comfortable and unobtrusive wearability by design.},
    author = {Gemperle, Francine and Kasabach, Chris and Stivoric, John and Bauer, Malcolm and Martin, Richard},
    doi = {10.1109/ISWC.1998.729537},
    isbn = {0818690747},
    issn = {Gemperle1998},
    journal = {International Symposium on Wearable Computers, Digest of Papers},
    keywords = {design guidelines,design research,dynamic wearability,human body,wearable computers},
    mendeley-groups = {Artigo},
    pages = {116--122},
    title = {{Design for wearability}},
    
    volume = {1998-October},
    year = {1998}
}
@article{Lee2015,
    author = {Lee, Bongkyu},
    journal = {Journal of Korea Multimedia Society},
    keywords = {face recognition,fpga,soc,wearable},
    mendeley-groups = {Artigo},
    number = {2},
    pages = {244--252},
    title = {{Design and Implementation of a Face Recognition System-on-a-Chip for Wearable/Mobile Applications}},
    
    volume = {18},
    year = {2015}
}
@article{Narumi2016,
    author = {Narumi, T},
    journal = {The Fifth International Conference on Informatics and},
    mendeley-groups = {Artigo},
    title = {{An FPGA-Based Tiled Display System for a Wearable Display}},
    
    year = {2016}
}
@article{Abdelhedi2016,
    abstract = {Falls can lead to serious injuries, hospitalization and sometimes death, and are considered the number one cause of disabilities among elderly people, making falls a key concern in the healthcare sector. Advances in medical technology and healthcare mechanisms have driven the development of new responses to the healthcare needs of a growing elderly population. Ambulatory accelerometer devices have been applied to develop reliable and robust fall detection systems. This paper assesses fall detection systems using Field Programmable Gate Arrays (FPGAs) as a CPU in addition to data transmission. In this paper, we give a survey of the different fall detection systems based on FPGAs in the literature, definition of the main theoretical points of fall detection accelerometers-based systems, existing techniques and algorithms and we give an overview of the main steps to design a fall detection system.},
    author = {Sahar, Abdelhedi},
    doi = {10.5875/ausmt.v6i4.1105},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Abdelhedi et al. - 2016 - Fall Detection FPGA-Based Systems A Survey.pdf:pdf},
    issn = {2223-9766},
    journal = {International Journal of Automation and Smart Technology},
    keywords = {accelerometers,embedded systems,fall detection,fpga,health-monitoring},
    mendeley-groups = {Artigo},
    
    number = {4},
    pages = {191--202},
    title = {{Fall Detection FPGA-Based Systems: A Survey}},
    
    volume = {6},
    year = {2016}
}
@article{Ahola2007,
    abstract = {A new wearable sensor platform has been devel- oped. It is based on a Field Programmable Gate Array (FPGA) device. Because of this the hardware is very flexible and gives the platform unique opportunities for research of a wide range of architectures, applications and signal processing algorithms. The platform has been named NWSP, for Nokia Wrist–Attached Sensor Platform. This document describes the hardware, the firmware and applications of the platform. I.},
    author = {Ahola, Tom and Korpinen, Pekka and Rakkola, Juha and Ramo, Teemu and Salminen, Jukka and Savolainen, Jari},
    doi = {10.1109/IEMBS.2007.4352782},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Ahola et al. - 2007 - Wearable FPGA Based Wireless Sensor Platform.pdf:pdf},
    isbn = {978-1-4244-0787-3},
    issn = {1557-170X},
    journal = {2007 29th Annual International Conference of the IEEE Engineering in Medicine and Biology Society},
    mendeley-groups = {Artigo},
    
    pages = {2288--2291},
    pmid = {18002448},
    publisher = {IEEE},
    title = {{Wearable FPGA Based Wireless Sensor Platform}},
    
    year = {2007}
}
@inproceedings{Czajkowski2012,
    abstract = {We present an OpenCL compilation framework to generate high-performance hardware for FPGAs. For an OpenCL application comprising a host program and a set of kernels, it compiles the host program, generates Verilog HDL for each kernel, compiles the circuit using Altera Complete Design Suite 12.0, and downloads the compiled design onto an FPGA.We can then run the application by executing the host program on a Windows(tm)-based machine, which communicates with kernels on an FPGA using a PCIe interface. We implement four applications on an Altera Stratix IV and present the throughput and area results for each application. We show that we can achieve a clock frequency in excess of 160MHz on our benchmarks, and that OpenCL computing paradigm is a viable design entry method for high-performance computing applications on FPGAs.},
    author = {Czajkowski, Tomasz S. and Aydonat, Utku and Denisenko, Dmitry and Freeman, John and Kinsner, Michael and Neto, David and Wong, Jason and Yiannacouras, Peter and Singh, Deshanand P.},
    booktitle = {Proceedings - 22nd International Conference on Field Programmable Logic and Applications, FPL 2012},
    doi = {10.1109/FPL.2012.6339272},
    isbn = {9781467322560},
    title = {{From OpenCL to high-performance hardware on FPGAs}},
    year = {2012}
}
@inproceedings{Shagrithaya2013,
    abstract = {High-level FPGA synthesis tools aim to increase the productivity of FPGAs and to adopt them among software developers and domain experts. OpenCL is a specification introduced for parallel programming across heterogeneous platforms. In this paper, an automated compilation flow to generate customized application-specific hardware descriptions from OpenCL computation kernels is reported. The flow uses Xilinx AutoESL tool to obtain the design specification for OpenCL kernel cores. The provided architecture integrates generated cores with memory and OpenCL host application interfaces. The host program in the OpenCL application is compiled and executed to demonstrate a proof-of-concept implementation towards achieving an end-to-end flow that provides abstraction of hardware at the front-end.},
    author = {Shagrithaya, Kavya and Kepa, Krzysztof and Athanas, Peter},
    booktitle = {Proceedings of the International Conference on Application-Specific Systems, Architectures and Processors},
    doi = {10.1109/ASAP.2013.6567546},
    isbn = {9781479904921},
    title = {{Enabling development of OpenCL applications on FPGA platforms}},
    year = {2013}
}
@article{Stone2010,
    abstract = {The OpenCL standard offers a common API for program execution on systems composed of different types of computational devices such as multicore CPUs, GPUs, or other accelerators.},
    author = {Stone, John E. and Gohara, David and Shi, Guochun},
    doi = {10.1109/MCSE.2010.69},
    isbn = {1521-9615 VO - 12},
    issn = {15219615},
    journal = {Computing in Science and Engineering},
    mendeley-groups = {Artigo},
    number = {3},
    pages = {66--72},
    pmid = {21037981},
    title = {{OpenCL: A parallel programming standard for heterogeneous computing systems}},
    volume = {12},
    year = {2010}
}
@inproceedings{Fort2014,
    abstract = {LegUp [1] is an open-source high-level synthesis (HLS) tool that accepts a C program as input and automatically synthesizes it into a hybrid system. The hybrid system comprises an embedded processor and custom accelerators that realize user-designated compute-intensive parts of the program with improved throughput and energy efficiency. In this paper, we overview the LegUp framework and describe several recent developments: 1) support for an embedded ARM processor, as is available on Altera's recently released SoC FPGA, 2) HLS support for software parallelization schemes -- pthreads and OpenMP, 3) enhancements to LegUp's core HLS algorithms that raise the quality of the auto-generated hardware, and, 4) a preliminary debugging and verification framework providing C source-level debugging of HLS hardware. Since its first release in 2011, LegUp has been downloaded over 1000 times by groups around the world, providing a powerful platform for new research in high-level synthesis algorithms and embedded systems design.},
    author = {Fort, Blair and Canis, Andrew and Choi, Jongsok and Calagar, Nazanin and Lian, Ruolong and Hadjis, Stefan and Chen, Yu Ting and Hall, Mathew and Syrowik, Bain and Czajkowski, Tomasz and Brown, Stephen and Anderson, Jason},
    booktitle = {Proceedings - 2014 International Conference on Embedded and Ubiquitous Computing, EUC 2014},
    doi = {10.1109/EUC.2014.26},
    isbn = {9780769552491},
    keywords = {FPGAs,High-level synthesis,accelerators,embedded systems,performance,scheduling},
    mendeley-groups = {Artigo},
    title = {{Automating the Design of Processor/Accelerator Embedded Systems with LegUp High-Level Synthesis}},
    year = {2014}
}
@article{Case1995,
    author = {Case, B},
    journal = {The Microprocessor Report},
    mendeley-groups = {Artigo},
    title = {{Spec2000 retires spec92}},
    
    volume = {9},
    year = {1995}
}
@article{Hennessy2011,
    abstract = {5th ed. Computer Architecture: A Quantitative Approach explores the ways that software and technology in the cloud are accessed by digital media, such as cell phones, computers, tablets, and other mobile devices. The book became a part of Intel's 2012 recommended reading list for developers, and it covers the revolution of mobile computing. The text also highlights the two most important factors in architecture today: parallelism and memory hierarchy. The six chapters that this book is composed of follow a consistent framework: explanation of the ideas in each chapter; a "crosscutting issues" section, which presents how the concepts covered in one chapter connect with those given in other chapters; a "putting it all together" section that links these concepts by discussing how they are applied in real machine; and detailed examples of misunderstandings and architectural traps commonly encountered by developers and architects. The first chapter of the book includes formulas for energy, static and dynamic power, integrated circuit costs, reliability, and availability. Chapter 2 discusses memory hierarchy and includes discussions about virtual machines, SRAM and DRAM technologies, and new material on Flash memory. The third chapter covers the exploitation of instruction-level parallelism in high-performance processors, superscalar execution, dynamic scheduling and multithreading, followed by an introduction to vector architectures in the fourth chapter. Chapters 5 and 6 describe multicore processors and warehouse-scale computers (WSCs), respectively. This book is an important reference for computer architects, programmers, application developers, compiler and system software developers, computer system designers and application developers. Fully updated fifth edition covers the twin shifts to mobile and cloud computing, with new material, exercises, and case studies.--Publisher website. Fundamentals of quantitative design and analysis -- Memory hierarchy design -- Instruction-level parallelism and its exploitation -- Data-level parallelism in vector, SIMD, and GPU architectures -- Thread-level parallelism -- Warehouse-scale computers to exploit request-level and data-level parallelism -- Instruction set principles -- Review of memory hierarchy -- Pipelining: basic and intermediate concepts -- Online appendices. Storage systems -- Embedded systems -- Interconnection networks -- Vector processors in more depth -- Hardware and software for VLIW and EPIC -- Large-scale multiprocessors and scientific applications -- Computer arithmetic -- Survey of instruction set architectures -- Historical perspectives and references.},
    archivePrefix = {arXiv},
    arxivId = {arXiv:1011.1669v3},
    author = {Melorose, J. and Perroy, R. and Careas, S.},
    doi = {10.1017/CBO9781107415324.004},
    eprint = {arXiv:1011.1669v3},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Hennessy, Patterson - 2011 - Computer architecture a quantitative approach.pdf:pdf},
    isbn = {9788578110796},
    issn = {1098-6596},
    journal = {Statewide Agricultural Land Use Baseline 2015},
    keywords = {icle},
    mendeley-groups = {Artigo},
    pmid = {25246403},
    title = {{Computer Architecture a quantitative approach 5}},
    
    volume = {1},
    year = {2015}
}
@article{Trevett2008,
    author = {Trevett, Neil},
    issn = {87563282},
    journal = {Group},
    mendeley-groups = {Artigo},
    number = {November},
    title = {{OpenCL: The open standard for heterogeneous parallel programming}},
    
    year = {2008}
}
@misc{openmp,
    abstract = {The collection of compiler directives, library routines, and environment variables described in this document collectively define the specification of the OpenMP Application Program Interface (OpenMP API) for parallelism in C, C++ and Fortran programs. This specification provides a model for parallel programming that is portable across architectures from different vendors. Compilers from numerous vendors support the OpenMP API. More information about the OpenMP API can be found at the following web site http://www.openmp.org The directives, library routines, and environment variables defined in this document allow users to create and to manage parallel programs while permitting portability. The directives extend the C, C++ and Fortran base languages with single program multiple data (SPMD) constructs, tasking constructs, device constructs, worksharing constructs, and synchronization constructs, and they provide support for sharing, mapping and privatizing data. The functionality to control the runtime environment is provided by library routines and environment variables. Compilers that support the OpenMP API often include a command line option to the compiler that activates and allows interpretation of all OpenMP directives.},
    author = {Architecture, Openmp and Board, Review},
    mendeley-groups = {Artigo},
    number = {November},
    pages = {359},
    title = {{The OpenMP API specification for parallel programming}},
    
    year = {2015}
}
@article{Barney2009,
    author = {Barney, Blaise},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Barney - 2009 - POSIX threads programming.pdf:pdf},
    isbn = {0201633922},
    journal = {Lawrence Livermore National Laboratory, https://computing. llnl. gov/tutorials/pthreads/, available online},
    mendeley-groups = {Artigo},
    title = {{POSIX threads programming}},
    
    volume = {2010},
    year = {2009}
}
@misc{Maan2015,
    author = {Maan, Lehar and Baker, Liana},
    booktitle = {Routers},
    mendeley-groups = {Artigo},
    pages = {1},
    title = {{Intel to buy Altera for {\$}16.7 billion in its biggest deal ever | Reuters}},
    
    
    year = {2015}
}
@article{Putnam2014,
    abstract = {Datacenter workloads demand high computational capabilities, flexibility, power efficiency, and low cost. It is challenging to improve all of these factors simultaneously. To advance datacenter capabilities beyond what commodity server designs can provide, we have designed and built a composable, reconfigurable fabric to accelerate portions of large-scale software services. Each instantiation of the fabric consists of a 6×8 2-D torus of high-end Stratix V FPGAs embedded into a half-rack of 48 machines. One FPGA is placed into each server, accessible through PCIe, and wired directly to other FPGAs with pairs of 10 Gb SAS cables. In this paper, we describe a medium-scale deployment of this fabric on a bed of 1,632 servers, and measure its efficacy in accelerating the Bing web search engine. We describe the requirements and architecture of the system, detail the critical engineering challenges and solutions needed to make the system robust in the presence of failures, and measure the performance, power, and resilience of the system when ranking candidate documents. Under high load, the largescale reconfigurable fabric improves the ranking throughput of each server by a factor of 95{\%} for a fixed latency distribution—or, while maintaining equivalent throughput, reduces the tail latency by 29{\%}.},
    author = {Putnam, Andrew and Caulfield, Adrian M. and Chung, Eric S. and Chiou, Derek and Constantinides, Kypros and Demme, John and Esmaeilzadeh, Hadi and Fowers, Jeremy and Gopal, Gopi Prashanth and Gray, Jan and Haselman, Michael and Hauck, Scott and Heil, Stephen and Hormati, Amir and Kim, Joo Young and Lanka, Sitaram and Larus, James and Peterson, Eric and Pope, Simon and Smith, Aaron and Thong, Jason and Xiao, Phillip Yi and Burger, Doug},
    doi = {10.1109/MM.2015.42},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Putnam, Others - 2014 - A Reconfigurable Fabric for Accelerating Large-Scale Datacenter Services.pdf:pdf},
    isbn = {9781479943968},
    issn = {02721732},
    journal = {IEEE Micro},
    keywords = {FPGA,datacenter,reconfigurable computing,web search},
    mendeley-groups = {Artigo},
    number = {3},
    pages = {10--22},
    title = {{A Reconfigurable Fabric for Accelerating Large-Scale Datacenter Services}},
    
    volume = {35},
    year = {2015}
}
@article{Lo2009,
    abstract = {Monte Carlo (MC) simulations are being used extensively in the field of medical biophysics, particularly for modeling light propagation in tissues. The high computation time for MC limits its use to solving only the forward solutions for a given source geometry, emission profile, and optical interaction coefficients of the tissue. However, applications such as photodynamic therapy treatment planning or image reconstruction in diffuse optical tomography require solving the inverse problem given a desired dose distribution or absorber distribution, respectively. A faster means for performing MC simulations would enable the use of MC-based models for accomplishing such tasks. To explore this possibility, a digital hardware implementation of a MC simulation based on the Monte Carlo for Multi-Layered media (MCML) software was implemented on a development platform with multiple field-programmable gate arrays (FPGAs). The hardware performed the MC simulation on average 80 times faster and was 45 times more energy efficient than the MCML software executed on a 3-GHz Intel Xeon processor. The resulting isofluence lines closely matched those produced by MCML in software, diverging by only less than 0.1 mm for fluence levels as low as 0.00001 cm(-2) in a skin model.},
    author = {Lo, William Chun Yip and Redmond, Keith and Luu, Jason and Chow, Paul and Rose, Jonathan and Lilge, Lothar},
    doi = {10.1117/1.3080134},
    issn = {10833668},
    journal = {Journal of Biomedical Optics},
    mendeley-groups = {Artigo},
    number = {1},
    pages = {014019},
    pmid = {19256707},
    title = {{Hardware acceleration of a Monte Carlo simulation for photodynamic treatment planning}},
    
    volume = {14},
    year = {2009}
}
@misc{RobvanderMeulen2015,
    abstract = {Gartner, Inc. forecasts that 8.4 billion connected things will be in use worldwide in 2017, up 31 percent from 2016, and will reach 20.4 billion by 2020. Total spending on endpoints and services will reach almost {\$}2 trillion in 2017.},
    archivePrefix = {arXiv},
    arxivId = {arXiv:1011.1669v3},
    author = {van der Meulen, Rob},
    booktitle = {Gartner Press Release},
    doi = {10.1017/CBO9781107415324.004},
    eprint = {arXiv:1011.1669v3},
    isbn = {9788578110796},
    issn = {1098-6596},
    keywords = {gartner media,gartner news,gartner press,media,media relations,news,news room,press,press releases},
    mendeley-groups = {Artigo},
    pages = {1},
    pmid = {25246403},
    title = {{Gartner Says 8.4 Billion Connected "Things" Will Be in Use in 2017, Up 31 Percent From 2016}},
    
    
    volume = {2016},
    year = {2017}
}
@article{Guthaus2001,
    abstract = {This paper examines a set of commercially representative embedded programs and compares them to an existing benchmark suite, SPEC2000. A new version of SimpleScalar that has been adapted to the ARM instruction set is used to characterize the performance of the benchmarks using configurations similar to current and next generation embedded processors. Several characteristics distinguish the representative embedded programs from the existing SPEC benchmarks including instruction distribution, memory behavior, and available parallelism. The embedded benchmarks, called MiBench, are freely available to all researchers.},
    author = {Guthaus, M. R. and Ringenberg, J. S. and Ernst, D. and Austin, T. M. and Mudge, T. and Brown, R. B.},
    doi = {10.1109/WWC.2001.990739},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Guthaus, Ringenberg, Ernst - 2001 - MiBench A free, commercially representative embedded benchmark suite.pdf:pdf},
    isbn = {0780373154},
    journal = {2001 IEEE International Workshop on Workload Characterization, WWC 2001},
    mendeley-groups = {Artigo},
    pages = {3--14},
    title = {{MiBench: A free, commercially representative embedded benchmark suite}},
    
    year = {2001}
}
@inproceedings{Arato2003,
    abstract = {One of the most crucial steps in the design of embedded systems is hardware-software partitioning, i.e. deciding which components of the system are implemented in hardware and which ones in software. Different versions of the partitioning problem are defined, corresponding to real-time systems, and cost-constrained systems, respectively. The authors provide a formal mathematic analysis of the complexity of the problems: it is proven that they are NP-hard in the general case, and some efficiently solvable special cases are also presented. An ILP (integer linear programming) based approach is presented that are solving the problem optimally even for quite big systems, and a genetic algorithm (GA) that finds near-optimal solutions for even larger systems. A specialty of the GA is that nonvalid individuals are also allowed, but punished by the fitness function.},
    author = {Arat{\'{o}}, P{\'{e}}ter and Juh{\'{a}}sz, S{\'{a}}ndor and Mann, Zolt{\'{a}}n {\'{A}}d{\'{a}}m and Orb{\'{a}}n, Andr{\'{a}}s and Papp, D{\'{a}}vid},
    booktitle = {2003 IEEE International Symposium on Intelligent Signal Processing: From Classical Measurement to Computing with Perceptions},
    doi = {10.1109/ISP.2003.1275838},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Arat{\'{o}} et al. - 2003 - Hardware-software partitioning in embedded system design.pdf:pdf},
    isbn = {0780378644},
    keywords = {Genetic algorithm,Graph partitioning,Hardware/software codesign,Hardware/software partitioning,Integer linear programming},
    mendeley-groups = {Artigo},
    publisher = {IEEE},
    title = {{Hardware-software partitioning in embedded system design}},
    
    year = {2003}
}
@article{Mann2007,
    author = {Mann, Z{\'{A}} and Orb{\'{a}}n, A and Arat{\'{o}}, P{\'{e}}ter},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Mann, Orb{\'{a}}n, Arat{\'{o}} - 2007 - Finding optimal hardwaresoftware partitions.pdf:pdf},
    journal = {Formal Methods in System Design},
    mendeley-groups = {Artigo},
    title = {{Finding optimal hardware/software partitions}},
    
    year = {2007}
}
@article{Wang2016,
    abstract = {Automatic hardware/software partitioning relies on characterization, estimation and design space exploration of the system performance and cost metrics. In real world situations, such estimates are complicated and cannot be 100 percent accurate. Furthermore, hardware/software co-design is so complicated nowadays that simply considering the bipartitioning between hardware and software is not sufficient. It is important to consider some of the other key design parameters and resource sharing together with the hardware/software partitioning problem. Under variable requirements of smart systems, more flexibility on the resource usage should be incorporated in system modelling. This paper considers uncertainty modeling for system partitioning with an enhanced set of parameters for hardware/software resource sharing. We harness state-of-the-art uncertainty theory for linear uncertain distribution and normal uncertain distribution. Our derivations convert the uncertainty model back to a regular constraint optimization problem. Experimental results show the effectiveness of our approach.},
    author = {Wang, Rui and Hung, William N.N. and Yang, Guowu and Song, Xiaoyu},
    doi = {10.1109/TC.2016.2519895},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Wang et al. - 2016 - Uncertainty model for configurable hardwaresoftware and resource partitioning.pdf:pdf},
    isbn = {0018-9340},
    issn = {00189340},
    journal = {IEEE Transactions on Computers},
    keywords = {Uncertainty model,hardware/software partitioning,resource partitioning,resource sharing},
    mendeley-groups = {Artigo},
    
    number = {10},
    pages = {3217--3223},
    title = {{Uncertainty model for configurable hardware/software and resource partitioning}},
    
    volume = {65},
    year = {2016}
}
@article{Trindade2016,
    abstract = {When performing hardware/software co-design for embedded systems, the problem of which functions of the system should be implemented in hardware (HW) or in software (SW) emerges. This problem is known as HW/SW partitioning. Over the last 10 years, a significant research effort has been carried out in this area. In this paper, we present two new approaches to solve the HW/SW partitioning problem by using verification techniques based on satisfiability modulo theories (SMT). We compare the results using the traditional technique of integer linear programming, specifically binary integer programming and a modern method of optimization by genetic algorithm. The experimental results show that SMT-based verification techniques can be effective in particular cases to solve the HW/SW partition problem optimally using a state-of-the-art model checker based on SMT solvers, when compared against traditional techniques.},
    author = {Trindade, Alessandro B. and Cordeiro, Lucas C.},
    doi = {10.1007/s10617-015-9163-z},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Trindade, Cordeiro - 2016 - Applying SMT-based verification to hardwaresoftware partitioning in embedded systems.pdf:pdf},
    issn = {15728080},
    journal = {Design Automation for Embedded Systems},
    keywords = {Binary integer programming,Embedded systems,Formal verification,Genetic algorithm,Hardware/software co-design,Partitioning},
    mendeley-groups = {Artigo},
    
    number = {1},
    pages = {1--19},
    publisher = {Springer US},
    title = {{Applying SMT-based verification to hardware/software partitioning in embedded systems}},
    
    volume = {20},
    year = {2016}
}
@inproceedings{Hardt1995,
    abstract = {Embedded system design faces the HW/SW-partitioning problem. This is often solved by explicit designer decisions. We describe a partitioning method based on design specification analysis. Static and dynamic aspects influence the overall time behavior and are examined during two analysis phases. Each phase evaluates a cost function and classifies the suitability of the regarded partition for HW-implementation. Furthermore costs of the HW/SW-interface are taken into account because this overhead may not be neglected. The analysis method is demonstrated by several benchmarks and reasonable results are pointed out. It has also been pointed out that the efficiency of embedded systems is dramatically influenced by the interface between HW- and SW. We developed a pipelined interface using the features of the target architecture. The interface allows handling of multiple HW-components and parameter transfer is quick and flexible},
    author = {Hardt, W},
    booktitle = {IEE Colloquium on Partitioning in Hardware-Software Codesigns},
    doi = {10.1049/ic:19950170},
    issn = {09633308},
    mendeley-groups = {Partitioning,Artigo},
    title = {{An automated approach to HW/SW-codesign}},
    
    year = {1995}
}
@article{Wolf1994,
    abstract = {This paper surveys the design of embedded computer systems, which use software running on programmable computers to implement system functions. Creating an embedded computer system which meets its performance, cost, and design time goals is a hardware-software co-design problem-the design of the hardware and software components influence each other. This paper emphasizes a historical approach to show the relationships between well-understood design problems and the as-yet unsolved problems in co-design. We describe the relationship between hardware and software architecture in the early stages of embedded system design. We describe analysis techniques for hardware and software relevant to the architectural choices required for hardware-software co-design. We also describe design and synthesis techniques for co-design and related problems},
    author = {Wolf, W.H.},
    doi = {10.1109/5.293155},
    isbn = {0792399366},
    issn = {00189219},
    journal = {Proceedings of the IEEE},
    mendeley-groups = {Partitioning,Artigo},
    number = {7},
    pages = {967--989},
    title = {{Hardware-software co-design of embedded systems}},
    volume = {82},
    year = {1994}
}

@inproceedings{Edwards1994,
    author = {Edwards, M. and Forrest, J.},
    booktitle = {Proceedings of European Design and Test Conference EDAC-ETC-EUROASIC},
    doi = {10.1109/EDTC.1994.326834},
    isbn = {0-8186-5410-4},
    mendeley-groups = {Artigo},
    publisher = {IEEE Computer Society Press},
    title = {{A development environment for the cosynthesis of embedded software/hardware systems}}
}


@article{Brown1996,
    abstract = {This article provides a tutorial survey of architectures of commercially available high-capacity field-programmable devices (FPDs), and gives a summary of recent research results in the field. In the survey section, we first define the relevant terminology in the field and then describe the recent evolution of FPDs. The three main categories of FPDs are delineated: Simple PLDs (SPLDs), Complex PLDs (CPLDs) and Field-Programmable Gate Arrays (FPGAs). We then give details of the architectures of all of the most important commercially available chips. The second part of the article gives an overview of the most important research results on FPD architecture over the past six years, and provides suggestions as to features that may be included in future architectures.},
    author = {Brown, Stephen and Rose, Jonathan},
    doi = {10.1109/54.500200},
    isbn = {0740-7475 VO - 13},
    issn = {07407475},
    journal = {IEEE Design and Test of Computers},
    mendeley-groups = {FPGA,Artigo},
    number = {2},
    pages = {42--56},
    title = {{FPGA and CPLD architectures: A tutorial}},
    volume = {13},
    year = {1996}
}
@article{Smith1998,
    author = {Smith, Douglas j},
    isbn = {0965193438},
    mendeley-groups = {FPGA,Artigo},
    title = {{HDL chip Design a prctical guide for designing, synthesizing and simulating AISC and FPGA using VHDL or verlog}},
    
    year = {1997}
}
@article{Madsen1997,
    abstract = {This paper describes the LYCOS system, an experimental co-synthesis environment. We present the motivation and philosophy of LYCOS and after an overview of the entire system, the individual parts are described. We use a single CPU, single ASIC target architecture and we describe the techniques we use to estimate metrics concerning hardware, software and communication in this architecture. Finally we present a novel partitioning technique called PACE, which has shown to produce excellent results, and we demonstrate how partitioning is used to do design space exploration.},
    author = {Madsen, J. and Grode, J. and Knudsen, P. V. and Petersen, M. E. and Haxthausen, A.},
    doi = {10.1023/A:1008884219274},
    issn = {09295585},
    journal = {Design Automation for Embedded Systems},
    keywords = {Analysis,Co-synthesis,Codesign,Estimation,Hardware/software partitioning},
    mendeley-groups = {Partitioning,Artigo},
    number = {2},
    pages = {195--235},
    title = {{LYCOS: The Lyngby Co-Synthesis System}},
    
    volume = {2},
    year = {1997}
}
@article{Wu2006,
    abstract = {A low-complex algorithm is proposed for the hardware/software partitioning. The proposed algorithm employs dynamic programming principles while accounting for communication delays. It is shown that the time complexity of the latest algorithm has been reduced from O(n2ṡA) to O(nṡA), without increase in space complexity, for n code fragments and hardware area A. {\textcopyright} 2005 Elsevier B.V. All rights reserved.},
    author = {Wu, Jigang and Srikanthan, Thambipillai},
    doi = {10.1016/j.ipl.2005.12.008},
    issn = {00200190},
    journal = {Information Processing Letters},
    keywords = {Algorithms,Complexity,Dynamic programming,Hardware/software partitioning},
    mendeley-groups = {Partitioning,Artigo},
    number = {2},
    pages = {41--46},
    title = {{Low-complex dynamic programming algorithm for hardware/software partitioning}},
    volume = {98},
    year = {2006}
}
@inproceedings{Hidalgo1997,
    abstract = {Hardware-Software partitioning is one of the most important issues of Codesign of embedded systems because it is made at the beginning of the cycle of design. In terms of costs and delays, final results will strongly depend on partitioning. In this work we address the functional partitioning problem of Hardware-Software Codesign using a genetic algorithm. Experimental results includes a comparative study with 3 algorithms such are Simulated Annealing, Fiduccia - Matheyses and a Modified version of this with an improvement of results.},
    author = {Hidalgo, J. I. and Lanchares, J.},
    booktitle = {Proceedings of the EUROMICRO},
    doi = {10.1109/EURMIC.1997.617393},
    isbn = {0818681292},
    issn = {10896503},
    mendeley-groups = {Partitioning,Artigo},
    title = {{Functional partitioning for hardware-software codesign using genetic algorithms}},
    year = {1997}
}
@article{Zhang2008,
    abstract = {Hardware/software codesign is the main approach to designing the embedded systems. One of the primary steps of the hardware/software codesign is the hardware/software partitioning. A good partitioning scheme is a tradeoff of some constraints, such as power, size, performance, and so on. Inspired by both negative selection model and evolutionary mechanism of the biological immune system, an evolutionary negative selection algorithm for hardware/software partitioning, namely ENSA-HSP, is proposed in this paper. This ENSA-HSP algorithm is proved to be convergent, and its ability to escape from the local optimum is also analyzed. The experimental results demonstrate that ENSA-HSP is more efficient than traditional evolutionary algorithm. {\textcopyright} 2007 Elsevier B.V. All rights reserved.},
    author = {Zhang, Yiguo and Luo, Wenjian and Zhang, Zeming and Li, Bin and Wang, Xufa},
    doi = {10.1016/j.asoc.2007.03.003},
    issn = {15684946},
    journal = {Applied Soft Computing Journal},
    keywords = {Artificial immune system,Evolutionary algorithm,Hardware/software partitioning,Negative selection},
    mendeley-groups = {Partitioning,Artigo},
    number = {1},
    pages = {383--391},
    title = {{A hardware/software partitioning algorithm based on artificial immune principles}},
    
    volume = {8},
    year = {2008}
}
@article{Niemann1997,
    abstract = {One of the key problems in hardware/software codesign is hardware/software partitioning. This paper describes a new approach to hardware/software partitioning using integer programming (IP). The advantage of using IP is that optimal results are calculated for a chosen objective function, The partitioning approach works fully automatic and supports multi-processor systems, interfacing and hardware sharing. In contrast to other approaches where special estimators are used, we use compilation and synthesis tools for cost estimation. The increased time for calculating values for the cost metrics is compensated by an improved quality of the values. Therefore, fewer iteration steps for partitioning are needed. The paper presents an algorithm using integer programming for solving the hardware/software partitioning problem leading to promising results.},
    author = {Niemann, R. and Marwedel, P.},
    doi = {10.1023/A:1008832202436},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Niemann, Marwedel - 1997 - An algorithm for hardwaresoftware partitioning using mixed integer linear programming.pdf:pdf},
    issn = {0929-5585},
    journal = {Design Automation for Embedded Systems},
    mendeley-groups = {Partitioning,FPGA,Artigo},
    number = {2},
    pages = {165--193},
    title = {{An algorithm for hardware/software partitioning using mixed integer linear programming}},
    
    volume = {2},
    year = {1997}
}
@article{Jigang2004,
    author = {Jigang, W and Thambipillai, S},
    journal = {Signal Processing and Information},
    mendeley-groups = {Partitioning,Artigo},
    title = {{A branch-and-bound algorithm for hardware/software partitioning}},
    
    year = {2004}
}
@article{Strachacki2008,
    author = {Strachacki, Marek},
    doi = {10.1109/INFTECH.2008.4621608},
    isbn = {9781424422456},
    journal = {Proceedings of the 2008 1st International Conference on Information Technology, IT 2008},
    mendeley-groups = {Partitioning,Artigo},
    title = {{Speedup of branch and bound method for hardware/software partitioning}},
    
    year = {2008}
}
@article{Trappey2016,
    author = {Trappey, A.J.C. and Shen, W. and Cha, J.J.},
    doi = {10.1007/s11518-016-5313-5},
    issn = {10043756},
    journal = {Journal of Systems Science and Systems Engineering},
    mendeley-groups = {Artigo},
    number = {2},
    title = {{Special issue editorial on advances in collaborative systems engineering for product design, production and service network}},
    
    volume = {25},
    year = {2016}
}
@inproceedings{Kern2002,
    abstract = { We propose to use wearable computers and sensor systems to generate personal contextual annotations in audio visual recordings of meetings. In this paper we argue that such annotations are essential and effective to allow retrieval of relevant information from large audio-visual databases. The paper proposes several useful annotations that can be derived from cheap and unobtrusive sensors. It also describes a hardware platform designed to implement this concept and presents first experimental results.},
    author = {Kern, Nicky and Schiele, Bernt and Junker, Holger and Lukowicz, Paul and Troster, Gerhard},
    booktitle = {Proceedings - International Symposium on Wearable Computers, ISWC},
    doi = {10.1109/ISWC.2002.1167247},
    isbn = {0769518168},
    issn = {15504816},
    keywords = {Accelerometers,Audio databases,Audio recording,Biosensors,Computer vision,Disk recording,Humans,Information retrieval,Wearable computers,Wearable sensors},
    mendeley-groups = {Wearable,Artigo},
    title = {{Wearable sensing to annotate meeting recordings}},
    year = {2002}
}
@inproceedings{VanLaerhoven2002,
    abstract = {Inspired by perception in biological systems, distribution of a massive amount of simple sensing devices is gaining more support in detection applications. A focus on fusion of sensor signals instead of strong analysis algorithms, and a scheme to distribute sensors, results in new issues. Especially in wearable computing, where sensor data continuously changes, and clothing provides an ideal supporting structure for simple sensors, this approach may prove to be favourable. Experiments with a body-distributed sensor system investigate the influence of two factors that affect classification of what has been sensed: an increase in sensors enhances recognition, while adding new classes or contexts depreciates the results. Finally, a wearable computing related scenario is discussed that exploits the presence of many sensors.},
    author = {{Van Laerhoven}, Kristof and Schmidt, Albrecht and Gellersen, Hans Werner},
    booktitle = {Proceedings - International Symposium on Wearable Computers, ISWC},
    doi = {10.1109/ISWC.2002.1167218},
    isbn = {0769518168},
    issn = {15504816},
    mendeley-groups = {Wearable,Artigo},
    title = {{Multi-sensor context aware clothing}},
    year = {2002}
}
@article{Kymissis1998,
    author = {Kymissis, John and Kendall, Clyde and Paradiso, Joseph},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Kymissis, Kendall, Paradiso - 1998 - Parasitic power harvesting in shoes.pdf:pdf},
    journal = {Proceedings of the 2nd IEEE International Symposium on Wearable Computers},
    mendeley-groups = {Wearable,Artigo},
    pages = {132--140},
    title = {{Power harvesting in shoes}},
    
    year = {1998}
}
@article{Bolsens1997,
    abstract = {In this paper we reflect on the nature of digital telecommunication systems. We argue that these systems require, by nature, a heterogeneous specification and an implementation with heterogeneous architectural styles. CoWare is a hardware/software co-design environment based on a data model that allows to specify, simulate, and synthesize heterogeneous hardware/software architectures from a heterogeneous specification. CoWare is based on the principle of encapsulation of existing hardware and software compilers and special attention is paid to the interactive synthesis of hardware/software and hardware/hardware interfaces. The principles of CoWare will be illustrated by the design process of a spread-spectrum receiver for a pager system.},
    author = {Bolsens, Ivo and {De Man}, Hugo J. and Lin, Bill and {Van Rompaey}, Karl and Vercauteren, Steven and Verkest, Diederik},
    doi = {10.1109/5.558713},
    isbn = {0018-9219},
    issn = {00189219},
    journal = {Proceedings of the IEEE},
    mendeley-groups = {Artigo},
    number = {3},
    pages = {391--417},
    title = {{Hardware/software co-design of digital telecommunication systems}},
    volume = {85},
    year = {1997}
}
@article{Gajski1994,
    author = {Gajski, Daniel D and Vahid, Frank and Narayan, Sanjiv and Gong, Ji},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Gajski et al. - 1994 - Specification and design of embedded systems.pdf:pdf},
    mendeley-groups = {Partitioning,Artigo},
    pages = {1--10},
    title = {{Specification and Design of Embedded Systems}},
    
    year = {1994}
}
@book{Gupta1995,
    abstract = {As the complexity of systems being subject to computer-aided synthesis$\backslash$nand optimization techniques increases, so does the need to find ways$\backslash$nto incorporate predesigned components into the final system implementation.$\backslash$nIn this context, a general-purpose microprocessor provides a sophisticated$\backslash$nlow-cost component that can be tailored to realize most system functions$\backslash$nthrough appropriate software. This approach is particularly useful$\backslash$nin the design of embedded systems that have a relatively simple target$\backslash$narchitecture, when compared to general-purpose computing systems$\backslash$nsuch as workstations. In embedded systems the processor is used as$\backslash$na resource dedicated to implement specific functions. However, the$\backslash$ndesign issues in embedded systems are complicated since most of these$\backslash$nsystems operate in a time-constrained environment. Recent advances$\backslash$nin chip-level synthesis have made it possible to synthesize application-specific$\backslash$ncircuits under strict timing constraints. This dissertation formulates$\backslash$nthe problem of computer-aided design of embedded systems using both$\backslash$napplication-specific as well as general-purpose reprogrammable components$\backslash$nunder timing constraints.$\backslash$n$\backslash$nGiven a specification of system functionality and constraints in a$\backslash$nhardware description language, we model the system as a set of bilogic$\backslash$nflow graphs, and formulate the co-synthesis problem as a partitioning$\backslash$nproblem under constraints. Timing constraints are used to determine$\backslash$nthe parts of the system functionality that are delegated to applicationspecific$\backslash$nhardware and the software that runs on the processor. The software$\backslash$ncomponent of such a mixed' system poses an interesting problem due$\backslash$nto its interaction with concurrently operating hardware. We address$\backslash$nthis problem by generating software as a set of concurrent fixed-latency$\backslash$nserialized operations called threads. The satisfaction of the imposed$\backslash$nperformance constraints is then ensured by exploiting concurrency$\backslash$nbetween program threads, achieved by an inter-leaved execution on$\backslash$na single processor system.$\backslash$n$\backslash$nThis co-synthesis of hardware and software from behavioral specifications$\backslash$nmakes it possible to build time-constrained embedded systems by using$\backslash$noff-the-shelf parts and application-specific circuitry. Due to the$\backslash$nreduction in size of application-specific hardware needed compared$\backslash$nto an all-hardware solution, the needed hardware component can be$\backslash$neasily mapped to semicustom VLSI such as gate arrays, thus shortening$\backslash$nthe design time. In addition, the ability to perform a detailed analysis$\backslash$nof timing performance provides an opportunity to improve the system$\backslash$ndefinition by creating better prototypes. The algorithms and techniques$\backslash$ndescribed have been implemented in a framework called Vulcan, which$\backslash$nis integrated with the Stanford Olympus Synthesis System and provides$\backslash$na path from chip-level synthesis to system-level synthesis.},
    author = {Gupta, Rajesh Kumar},
    doi = {10.1007/978-1-4615-2287-4},
    isbn = {0792396138 (acid-free paper)},
    mendeley-groups = {Artigo},
    pages = {266},
    publisher = {Kluwer Academic Publishers},
    title = {{Co-Synthesis of Hardware and Software for Digital Embedded Systems}},
    
    year = {1993}
}
@article{Nematbakhsh,
    author = {Nematbakhsh, Shawn and Stitt, Greg and Vahid, Frank},
    mendeley-groups = {Partitioning,FPGA,Artigo},
    title = {{The Effect of FPGA Size on Software Speedup from Hardware / Software Partitioning The Effect of FPGA Size on Software Speedup from Hardware / Software Partitioning}},
    url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.115.8134}
}
@article{Mann1996,
    abstract = {Smart clothing—-the combination of mobile multimedia, wireless communi- cation, and wearable computing—-offers the potential to make personal computers even more personal.},
    author = {Mann, Steve},
    doi = {10.1145/232014.232021},
    isbn = {0001-0782},
    issn = {00010782},
    journal = {Communications of the ACM},
    mendeley-groups = {Wearable,Artigo},
    number = {8},
    pages = {23--24},
    title = {{Smart clothing: the shift to wearable computing}},
    
    volume = {39},
    year = {1996}
}
@article{Delabrida2016,
    abstract = {Wearable devices have emerged in the last years with new applications that provide user convenience. Healthcare, sports, safety are some examples of applications embedded in thousands of devices released in the last years. Wearable operating systems with di erent focus emerged together with wearable applications in order to make adjustments and optimizations of software and hardware. This paper presents a wearable operating systems discussion and shows the current challenges and wearable operating system in uence. We developed a wearable appliance for geology. The wearable contains a Head Mounted Display (HMD) assembled with Google Cardboard API and sensors connected to developments boards. For each system component was used di erent operating systems according to hardware and software available. The results indicate some trends for wearable operating systems.},
    author = {Delabrida, Saul and D'Angelo, Thiago and Oliveira, Ricardo A.R. and Loureiro, Antonio A.F.},
    doi = {10.1145/2903267.2903275},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Delabrida et al. - 2016 - Building wearables for geology.pdf:pdf},
    isbn = {9781509001828},
    issn = {01635980},
    journal = {ACM SIGOPS Operating Systems Review},
    mendeley-groups = {Wearable,Artigo},
    number = {1},
    pages = {31--45},
    title = {{Building Wearables for Geology}},
    
    volume = {50},
    year = {2016}
}
@inproceedings{Sutherland1968,
    abstract = {The fundamental idea behind the three-dimensional display is to present the user with a perspective image which changes as he moves. The retinal image of the real objects which we see is, after all, only two-dimensional. Thus if we can place suitable two-dimensional images on the observer's retinas, we can create the illusion that he is seeing a three-dimensional object. Although stereo presentation is important to the three-dimensional illusion, it is less important than the change that takes place in the image when the observer moves his head. The image presented by the three-dimensional display must change in exactly the way that the image of a real object would change for similar motions of the user's head. Psychologists have long known that moving perspective images appear strikingly three-dimensional even without stereo presentation; the three-dimensional display described in this paper depends heavily on this "kinetic depth effect."},
    author = {Sutherland, Ivan E.},
    booktitle = {Proceedings of the December 9-11, 1968, fall joint computer conference, part I on - AFIPS '68 (Fall, part I)},
    doi = {10.1145/1476589.1476686},
    isbn = {158113052X},
    issn = {18770509},
    mendeley-groups = {Artigo},
    title = {{A head-mounted three dimensional display}},
    
    year = {1968}
}
@article{Mann1997,
    abstract = {Miniaturization of components has enabled systems that are$\backslash$nwearable and nearly invisible, so that individuals can move about and$\backslash$ninteract freely, supported by their personal information domain. To$\backslash$nexplore such new concepts in imaging and lighting, I designed and built$\backslash$nthe wearable personal imaging system. My invention differed from$\backslash$npresent-day laptops and personal digital assistants in that I could keep$\backslash$nan eye on the screen while walking around and doing other things. Just$\backslash$nas computers have come to serve as organizational and personal$\backslash$ninformation repositories, computer clothing, when worn regularly, could$\backslash$nbecome a visual memory prosthetic and perception enhancer},
    author = {Mann, Steve},
    doi = {10.1109/2.566147},
    isbn = {0018-9162 VO - 30},
    issn = {00189162},
    journal = {Computer},
    mendeley-groups = {Wearable,Artigo},
    number = {2},
    pages = {25--32},
    title = {{Wearable computing: A first step toward personal imaging}},
    
    volume = {30},
    year = {1997}
}
@article{patel2015wearable,
    title={Wearable devices as facilitators, not drivers, of health behavior change},
    author={Patel, Mitesh S and Asch, David A and Volpp, Kevin G},
    journal={Jama},
    volume={313},
    number={5},
    pages={459--460},
    year={2015},
    publisher={American Medical Association}
}

@article{son2014multifunctional,
    title={Multifunctional wearable devices for diagnosis and therapy of movement disorders},
    author={Son, Donghee and Lee, Jongha and Qiao, Shutao and Ghaffari, Roozbeh and Kim, Jaemin and Lee, Ji Eun and Song, Changyeong and Kim, Seok Joo and Lee, Dong Jun and Jun, Samuel Woojoo and others},
    journal={Nature nanotechnology},
    volume={9},
    number={5},
    pages={397},
    year={2014},
    publisher={Nature Publishing Group}
}


@inproceedings{Amorim2017,
    abstract = {{\textcopyright} 2016 IEEE.Wearable devices have increasingly become popular in recent years. Devices attached to users body now remotely monitor his daily activities/health. However, some operating systems running on these devices were not initially designed and developed for this purpose, letting them have a poor performance or even requiring to spend more resources or better hardware. This work presents a comparison, driven by specific constraints, between operating systems for wearable devices. Our research raised the key constraints of this context and figured out which operating system has the best performance. Results presented here shows that evaluated operating systems do not have enough performance when considering wearable devices specific constraints, letting us conclude that improvements should be made.},
    author = {Amorim, Vicente Jose Peixoto and Delabrida, Saul and Oliveira, Ricardo Augusto Rabelo},
    booktitle = {Brazilian Symposium on Computing System Engineering},
    doi = {10.1109/SBESC.2016.030},
    isbn = {9781509026531},
    issn = {23247894},
    keywords = {Android,Assessment,Evaluation,Linux,Operating systems,Pebble,Tizen,Wearables},
    mendeley-groups = {Wearable,Artigo},
    title = {{A constraint-driven assessment of operating systems for wearable devices}},
    year = {2017}
}
@article{Amdahl1967,
    abstract = {For over a decade prophets have voiced the contention that the organization of a single computer has reached its limits and that truly significant advances can be made only by interconnection of a multiplicity of computers in such a manner as to permit cooperative solution. Variously the proper direction has been pointed out as general purpose computers with a generalized interconnection of memories, or as specialized computers with geometrically related memory interconnections and controlled by one or more instruction streams.},
    archivePrefix = {arXiv},
    arxivId = {arXiv:quant-ph/0611061v2},
    author = {Amdahl, Gene M.},
    doi = {10.1145/1465482.1465560},
    eprint = {0611061v2},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Amdahl - 1967 - Validity of the single processor approach to achieving large scale computing capabilities.pdf:pdf},
    isbn = {1558605398},
    issn = {18816096},
    journal = {Proceedings of the April 18-20, 1967, spring joint computer conference on - AFIPS '67 (Spring)},
    mendeley-groups = {Artigo},
    pages = {483},
    pmid = {21914993},
    primaryClass = {arXiv:quant-ph},
    title = {{Validity of the single processor approach to achieving large scale computing capabilities}},
    
    year = {1967}
}
@article{Plessl2003,
    abstract = {Wearable computers are embedded into the mobile environment of their users. A design challenge for wearable systems is to combine the high performance required for tasks such as video decoding with the low energy consumption required to maximise battery runtimes and the flexibility demanded by the dynamics of the environment and the applications. In this paper, we demonstrate that reconfigurable hardware technology is able to answer this challenge. We present the concept and the prototype implementation of an autonomous wearable unit with reconfigurable modules (WURM). We discuss experiments that show the uses of reconfigurable hardware in WURM: ASICs-on-demand and adaptive interfaces. Finally, we present an experiment with an operating system layer for WURM.},
    author = {Plessl, Christian and Enzler, Rolf and Walder, Herbert and Beutel, Jan and Platzner, Marco and Thiele, Lothar and Tr{\"{o}}ster, Gerhard},
    doi = {10.1007/s00779-003-0243-x},
    issn = {16174909},
    journal = {Personal and Ubiquitous Computing},
    keywords = {Body area computing system,Embedded systems,Field-programmable gate arrays,Reconfigurable hardware,Wearable computing},
    mendeley-groups = {Wearable,Artigo},
    number = {5},
    pages = {299--308},
    title = {{The case for reconfigurable hardware in wearable computing}},
    volume = {7},
    year = {2003}
}
@article{Ernst1993,
    abstract = {The authors present a software-oriented approach to hardware-software partitioning which avoids restrictions on the software semantics as well as an iterative partitioning process based on hardware extraction controlled by a cost function. This process is used in Cosyma, an experimental cosynthesis system for embedded controllers. As an example, the extraction of coprocessors for loops is demonstrated. Results are presented for several benchmark designs.},
    author = {Ernst, Rolf and Henkel, Jorg and Benner, Thomas},
    doi = {10.1109/54.245964},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Ernst, Henkel, Benner - 1993 - Hardware-software cosynthesis for microcontrollers.pdf:pdf},
    issn = {07407475},
    journal = {IEEE Design and Test of Computers},
    mendeley-groups = {Artigo},
    number = {4},
    pages = {64--75},
    title = {{Hardware-Software Cosynthesis for Microcontrollers}},
    
    volume = {10},
    year = {1993}
}
@article{Mei2000,
    abstract = {Dynamically reconfigurable embedded systems (DRESs) target an architecture consisting of general- purpose processors and field programmable gate arrays (FPGAs), in which FPGAs can be reconfigured in run-time to achieve cost saving. In this paper, we describe a hardware-software partition- ing and scheduling approach for DRESs. Previous work only took configuration time into account, without consid- ering partial reconfiguration. With partial reconfiguration, the scheduling on FPGAs becomes a constrained placement problem, whereas scheduling on application-specific inte- grated circuits (ASICs) is a serialization problem. Here we present a method, based on genetic algorithm (GA) and an improved list scheduling algorithm, which can tackle multi- rate, real-time, periodic systems. The different variants of algorithm are evaluated by a randomly generated testbench.},
    author = {Mei, Bingfeng and Schaumont, P and Vernalde, S},
    doi = {10.1.1.14.8984},
    journal = {Proceedings of ProRISC},
    keywords = {co-design,dynamic reconfiguration,fpga,hardware-software co-design research deals,ogy from a system,partitioning,point of view,scheduling,with how},
    mendeley-groups = {Partitioning,FPGA,Artigo},
    title = {{A hardware-software partitioning and scheduling algorithm for dynamically reconfigurable embedded systems}},
    
    year = {2000}
}
@article{Stitt2003,
    abstract = {Partitioning an application among software running on a microprocessor$\backslash$nand hardware co-processors in on-chip configurable logic has been$\backslash$nshown to improve performance and energy consumption in embedded systems.$\backslash$nMeanwhile, dynamic software optimization methods have shown the usefulness$\backslash$nand feasibility of runtime program optimization, but those optimizations$\backslash$ndo not achieve as much as partitioning. We introduce a first approach$\backslash$nto dynamic hardware/software partitioning. We describe our system$\backslash$narchitecture and initial on-chip tools, including profiler, decompiler,$\backslash$nsynthesis, and placement and routing tools for a simplified configurable$\backslash$nlogic fabric, able to perform dynamic partitioning of real benchmarks.$\backslash$nWe show speedups averaging 2.6 for five benchmarks taken from Powerstone,$\backslash$nNetBench, and our own benchmarks.},
    author = {Stitt, G. and Lysecky, R. and Vahid, F.},
    doi = {10.1109/DAC.2003.1219003},
    isbn = {1581136889},
    journal = {Proceedings 2003. Design Automation Conference (IEEE Cat. No.03CH37451)},
    keywords = {3,algorithms,c,design,performance,real-,special-purpose and application-based systems,time and embedded systems},
    mendeley-groups = {Partitioning,Artigo},
    pages = {250--255},
    title = {{Dynamic hardware/software partitioning: a first approach}},
    
    year = {2003}
}
@article{BenHajHassine2017,
    abstract = {{\textless}p{\textgreater}Shortening the marketing cycle of the product and accelerating its development efficiency have become a vital concern in the field of embedded system design. Therefore, hardware/software partitioning has become one of the mainstream technologies of embedded system development since it affects the overall system performance. Given today's largest requirement for great efficiency necessarily accompanied by high speed, our new algorithm presents the best version that can meet such unpreceded levels. In fact, we describe in this paper an algorithm that is based on HW/SW partitioning which aims to find the best tradeoff between power and latency of a system taking into consideration the dark silicon problem. Moreover, it has been tested and has shown its efficiency compared to other existing heuristic well-known algorithms which are Simulated Annealing, Tabu search, and Genetic algorithms.{\textless}/p{\textgreater}},
    author = {{Ben Haj Hassine}, Siwar and Jemai, Mehdi and Ouni, Bouraoui},
    doi = {10.1155/2017/8624021},
    issn = {2356-752X},
    journal = {Journal of Optimization},
    mendeley-groups = {Partitioning,Artigo},
    pages = {1--11},
    publisher = {Hindawi Publishing Corporation},
    title = {{Power and Execution Time Optimization through Hardware Software Partitioning Algorithm for Core Based Embedded System}},
    
    volume = {2017},
    year = {2017}
}
@article{Yan2017,
    abstract = {{\textcopyright} 2017, Springer Science+Business Media New York. With the development of the design complexity in embedded systems, hardware/software (HW/SW) partitioning becomes a challenging optimization problem in HW/SW co-design. A novel HW/SW partitioning method based on position disturbed particle swarm optimization with invasive weed optimization (PDPSO-IWO) is presented in this paper. It is found by biologists that the ground squirrels produce alarm calls which warn their peers to move away when there is potential predatory threat. Here, we present PDPSO algorithm, in each iteration of which the squirrel behavior of escaping from the global worst particle can be simulated to increase population diversity and avoid local optimum. We also present new initialization and reproduction strategies to improve IWO algorithm for searching a better position, with which the global best position can be updated. Then the search accuracy and the solution quality can be enhanced. PDPSO and improved IWO are synthesized into one single PDPSO-IWO algorithm, which can keep both searching diversification and searching intensification. Furthermore, a hybrid NodeRank (HNodeRank) algorithm is proposed to initialize the population of PDPSO-IWO, and the solution quality can be enhanced further. Since the HW/SW communication cost computing is the most time-consuming process for HW/SW partitioning algorithm, we adopt the GPU parallel technique to accelerate the computing. In this way, the runtime of PDPSO-IWO for large-scale HW/SW partition ing problem can be reduced efficiently. Finally, multiple experiments on benchmarks from state-of-the-art publications and large-scale HW/SW partitioning demonstrate that the proposed algorithm can achieve higher performance than other algorithms.},
    author = {Yan, Xiao Hu and He, Fa Zhi and Chen, Yi Lin},
    doi = {10.1007/s11390-017-1714-2},
    file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Yan, He, Chen - 2017 - A Novel HardwareSoftware Partitioning Method Based on Position Disturbed Particle Swarm Optimization with Invasiv.pdf:pdf},
    issn = {10009000},
    journal = {Journal of Computer Science and Technology},
    keywords = {communication cost,hardware/software partitioning,invasive weed optimization,parallel computing,particle swarm optimization},
    mendeley-groups = {Partitioning,FPGA,Artigo},
    
    number = {2},
    pages = {340--355},
    publisher = {Springer US},
    title = {{A Novel Hardware/Software Partitioning Method Based on Position Disturbed Particle Swarm Optimization with Invasive Weed Optimization}},
    
    volume = {32},
    year = {2017}
}
@book{Sass2010,
    abstract = {This book will introduce professional engineers and students alike to system development using Platform FPGAs. The focus is on embedded systems but it also serves as a general guide to building custom computing systems. The text describes the fundamental technology in terms of hardware, software, and a set of principles to guide the development of Platform FPGA systems. The goal is to show how to systematically and creatively apply these principles to the construction of application-specific embedded system architectures. There is a strong focus on using free and open source software to increase productivity.},
    author = {Sass, Ronald and Schmidt, Andrew},
    edition = {1},
    isbn = {9780123743336},
    mendeley-groups = {FPGA,Artigo},
    pages = {408},
    publisher = {Morgan Kaufmann},
    title = {{Embedded Systems Design with Platform FPGAs Principles and Practices}},
    year = {2010}
}
@article{Nemeth2007,
    author = {Nemeth, E and Snyder, G and Hein, T R},
    isbn = {9788576051121},
    mendeley-groups = {Artigo},
    pages = {684},
    title = {{Manual completo do Linux: guia do administrador}},
    
    year = {2007}
}
