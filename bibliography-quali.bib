@book{Sass2010,
abstract = {This book will introduce professional engineers and students alike to system development using Platform FPGAs. The focus is on embedded systems but it also serves as a general guide to building custom computing systems. The text describes the fundamental technology in terms of hardware, software, and a set of principles to guide the development of Platform FPGA systems. The goal is to show how to systematically and creatively apply these principles to the construction of application-specific embedded system architectures. There is a strong focus on using free and open source software to increase productivity.},
author = {Sass, Ronald and Schmidt, Andrew},
edition = {1},
isbn = {9780123743336},
mendeley-groups = {FPGA},
pages = {408},
publisher = {Morgan Kaufmann},
title = {{Embedded Systems Design with Platform FPGAs Principles and Practices}},
year = {2010}
}

@inproceedings{amdahl1967validity,
  title={Validity of the single processor approach to achieving large scale computing capabilities},
  author={Amdahl, Gene M},
  booktitle={Proceedings of the April 18-20, 1967, spring joint computer conference},
  pages={483--485},
  year={1967},
  organization={ACM}
}

@book{tocci2003sistemas,
  title={Sistemas digitais: princ{\'\i}pios e aplica{\c{c}}{\~o}es},
  author={Tocci, Ronald J and Widmer, Neal S and Moss, Gregory L},
  volume={11},
  year={2011},
  publisher={Prentice Hall}
}

@article{Mann1996,
abstract = {Smart clothing—-the combination of mobile multimedia, wireless communi- cation, and wearable computing—-offers the potential to make personal computers even more personal.},
author = {Mann, Steve},
doi = {10.1145/232014.232021},
isbn = {0001-0782},
issn = {00010782},
journal = {Communications of the ACM},
number = {8},
pages = {23--24},
title = {{Smart clothing: the shift to wearable computing}},
url = {http://portal.acm.org/citation.cfm?doid=232014.232021},
volume = {39},
year = {1996}
}
@article{Delabrida2016,
author = {Delabrida, S and D'Angelo, T and Oliveira, RAR and Loureiro, AAF},
file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Delabrida et al. - 2016 - Building wearables for geology.pdf:pdf},
title = {{Building wearables for geology.}},
year = {2016}
}
@article{Sutherland1968,
author = {Sutherland, IE},
journal = {Proceedings of the December 9-11, 1968, fall joint},
title = {{A head-mounted three dimensional display}},
url = {http://dl.acm.org/citation.cfm?id=1476686},
year = {1968}
}
@article{Mann1997,
author = {Mann, S},
journal = {Computer},
title = {{Wearable computing: A first step toward personal imaging}},
url = {http://ieeexplore.ieee.org/abstract/document/566147/},
year = {1997}
}
@inproceedings{Amorim2017,
abstract = {{\textcopyright} 2016 IEEE.Wearable devices have increasingly become popular in recent years. Devices attached to users body now remotely monitor his daily activities/health. However, some operating systems running on these devices were not initially designed and developed for this purpose, letting them have a poor performance or even requiring to spend more resources or better hardware. This work presents a comparison, driven by specific constraints, between operating systems for wearable devices. Our research raised the key constraints of this context and figured out which operating system has the best performance. Results presented here shows that evaluated operating systems do not have enough performance when considering wearable devices specific constraints, letting us conclude that improvements should be made.},
author = {Amorim, Vicente Jose Peixoto and Delabrida, Saul and Oliveira, Ricardo Augusto Rabelo},
booktitle = {Brazilian Symposium on Computing System Engineering, SBESC},
doi = {10.1109/SBESC.2016.030},
isbn = {9781509026531},
issn = {23247894},
keywords = {Android,Assessment,Evaluation,Linux,Operating systems,Pebble,Tizen,Wearables},
pages = {150--155},
title = {{A constraint-driven assessment of operating systems for wearable devices}},
year = {2017}
}

@article{Mei2000,
abstract = {Dynamically reconfigurable embedded systems (DRESs) target an architecture consisting of general- purpose processors and field programmable gate arrays (FPGAs), in which FPGAs can be reconfigured in run-time to achieve cost saving. In this paper, we describe a hardware-software partition- ing and scheduling approach for DRESs. Previous work only took configuration time into account, without consid- ering partial reconfiguration. With partial reconfiguration, the scheduling on FPGAs becomes a constrained placement problem, whereas scheduling on application-specific inte- grated circuits (ASICs) is a serialization problem. Here we present a method, based on genetic algorithm (GA) and an improved list scheduling algorithm, which can tackle multi- rate, real-time, periodic systems. The different variants of algorithm are evaluated by a randomly generated testbench.},
author = {Mei, Bingfeng and Schaumont, P and Vernalde, S},
doi = {10.1.1.14.8984},
journal = {Proceedings of ProRISC},
keywords = {co-design,dynamic reconfiguration,fpga,hardware-software co-design research deals,ogy from a system,partitioning,point of view,scheduling,with how},
mendeley-groups = {Partitioning},
title = {{A hardware-software partitioning and scheduling algorithm for dynamically reconfigurable embedded systems}},
url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.14.8984{\&}rep=rep1{\&}type=pdf},
year = {2000}
}

@article{Hassine2017,
author = {Hassine, S Ben Haj and Jemai, M and Ouni, B},
file = {::},
journal = {Journal of Optimization},
title = {{Power and Execution Time Optimization through Hardware Software Partitioning Algorithm for Core Based Embedded System}},
url = {https://www.hindawi.com/journals/jopti/2017/8624021/abs/},
year = {2017}
}

@article{Stitt2003,
abstract = {Partitioning an application among software running on a microprocessor$\backslash$nand hardware co-processors in on-chip configurable logic has been$\backslash$nshown to improve performance and energy consumption in embedded systems.$\backslash$nMeanwhile, dynamic software optimization methods have shown the usefulness$\backslash$nand feasibility of runtime program optimization, but those optimizations$\backslash$ndo not achieve as much as partitioning. We introduce a first approach$\backslash$nto dynamic hardware/software partitioning. We describe our system$\backslash$narchitecture and initial on-chip tools, including profiler, decompiler,$\backslash$nsynthesis, and placement and routing tools for a simplified configurable$\backslash$nlogic fabric, able to perform dynamic partitioning of real benchmarks.$\backslash$nWe show speedups averaging 2.6 for five benchmarks taken from Powerstone,$\backslash$nNetBench, and our own benchmarks.},
author = {Stitt, G. and Lysecky, R. and Vahid, F.},
doi = {10.1109/DAC.2003.1219003},
isbn = {1581136889},
journal = {Proceedings 2003. Design Automation Conference (IEEE Cat. No.03CH37451)},
keywords = {3,algorithms,c,design,performance,real-,special-purpose and application-based systems,time and embedded systems},
pages = {250--255},
title = {{Dynamic hardware/software partitioning: a first approach}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1219003},
year = {2003}
}

@MISC{Nematbakhsh_theeffect,
    author = {Shawn Nematbakhsh and Greg Stitt and Frank Vahid and Shawn Nematbakhsh and Greg Stitt and Frank Vahid},
    title = {The Effect of FPGA Size on Software Speedup from Hardware/Software Partitioning},
    year = {}
}


   @article{Yan2017,
author = {Yan, Xiao-Hu and He, Fa-Zhi and Chen, Yi-Lin},
doi = {10.1007/s11390-017-1714-2},
file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Yan, He, Chen - 2017 - A Novel HardwareSoftware Partitioning Method Based on Position Disturbed Particle Swarm Optimization with Invasiv.pdf:pdf},
issn = {1000-9000},
journal = {Journal of Computer Science and Technology},
mendeley-groups = {Partitioning},
month = {mar},
number = {2},
pages = {340--355},
publisher = {Springer US},
title = {{A Novel Hardware/Software Partitioning Method Based on Position Disturbed Particle Swarm Optimization with Invasive Weed Optimization}},
url = {http://link.springer.com/10.1007/s11390-017-1714-2},
volume = {32},
year = {2017}
}

@article{Ernst1993,
abstract = {The authors present a software-oriented approach to hardware-software partitioning which avoids restrictions on the software semantics as well as an iterative partitioning process based on hardware extraction controlled by a cost function. This process is used in Cosyma, an experimental cosynthesis system for embedded controllers. As an example, the extraction of coprocessors for loops is demonstrated. Results are presented for several benchmark designs.},
author = {Ernst, Rolf and Henkel, Jorg and Benner, Thomas},
doi = {10.1109/54.245964},
issn = {07407475},
journal = {IEEE Design and Test of Computers},
number = {4},
pages = {64--75},
title = {{Hardware-Software Cosynthesis for Microcontrollers}},
volume = {10},
year = {1993}
}

@book{Gupta1995,
author = {Gupta, Rajesh Kumar and By-Micheli, Rajesh Kumar/Foreword and De, Giovanni},
isbn = {0792396138},
pages = {266},
publisher = {Kluwer Academic Publishers},
title = {{Co-synthesis of hardware and software for digital embedded systems}},
url = {http://dl.acm.org/citation.cfm?id=546156},
year = {1995}
}

@article{Gajski1994,
author = {Gajski, DD and Vahid, F and Narayan, S and Gong, J},
file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Gajski et al. - 1994 - Specification and design of embedded systems.pdf:pdf},
title = {{Specification and design of embedded systems}},
url = {http://tocs.ulb.tu-darmstadt.de/4948270X.pdf},
year = {1994}
}

@article{Bolsens1997,
abstract = {In this paper we reflect on the nature of digital telecommunication systems. We argue that these systems require, by nature, a heterogeneous specification and an implementation with heterogeneous architectural styles. CoWare is a hardware/software co-design environment based on a data model that allows to specify, simulate, and synthesize heterogeneous hardware/software architectures from a heterogeneous specification. CoWare is based on the principle of encapsulation of existing hardware and software compilers and special attention is paid to the interactive synthesis of hardware/software and hardware/hardware interfaces. The principles of CoWare will be illustrated by the design process of a spread-spectrum receiver for a pager system.},
author = {Bolsens, Ivo and {De Man}, Hugo J. and Lin, Bill and {Van Rompaey}, Karl and Vercauteren, Steven and Verkest, Diederik},
doi = {10.1109/5.558713},
isbn = {0018-9219},
issn = {00189219},
journal = {Proceedings of the IEEE},
number = {3},
pages = {391--417},
title = {{Hardware/software co-design of digital telecommunication systems}},
volume = {85},
year = {1997}
}

@article{Plessl2003,
abstract = {Wearable computers are embedded into the mobile environment of their users. A design challenge for wearable systems is to combine the high performance required for tasks such as video decoding with the low energy consumption required to maximise battery runtimes and the flexibility demanded by the dynamics of the environment and the applications. In this paper, we demonstrate that reconfigurable hardware technology is able to answer this challenge. We present the concept and the prototype implementation of an autonomous wearable unit with reconfigurable modules (WURM). We discuss experiments that show the uses of reconfigurable hardware in WURM: ASICs-on-demand and adaptive interfaces. Finally, we present an experiment with an operating system layer for WURM.},
author = {Plessl, Christian and Enzler, Rolf and Walder, Herbert and Beutel, Jan and Platzner, Marco and Thiele, Lothar and Tröster, Gerhard},
doi = {10.1007/s00779-003-0243-x},
issn = {16174909},
journal = {Personal and Ubiquitous Computing},
keywords = {Body area computing system,Embedded systems,Field-programmable gate arrays,Reconfigurable hardware,Wearable computing},
number = {5},
pages = {299--308},
title = {{The case for reconfigurable hardware in wearable computing}},
volume = {7},
year = {2003}
}

@inproceedings{VanLaerhoven2002,
abstract = {Inspired by perception in biological systems, distribution of a massive amount of simple sensing devices is gaining more support in detection applications. A focus on fusion of sensor signals instead of strong analysis algorithms, and a scheme to distribute sensors, results in new issues. Especially in wearable computing, where sensor data continuously changes, and clothing provides an ideal supporting structure for simple sensors, this approach may prove to be favourable. Experiments with a body-distributed sensor system investigate the influence of two factors that affect classification of what has been sensed: an increase in sensors enhances recognition, while adding new classes or contexts depreciates the results. Finally, a wearable computing related scenario is discussed that exploits the presence of many sensors.},
author = {{Van Laerhoven}, Kristof and Schmidt, Albrecht and Gellersen, Hans Werner},
booktitle = {Proceedings - International Symposium on Wearable Computers, ISWC},
doi = {10.1109/ISWC.2002.1167218},
isbn = {0769518168},
issn = {15504816},
pages = {49--56},
title = {{Multi-sensor context aware clothing}},
volume = {2002-January},
year = {2002}
}

@inproceedings{Kern2002,
abstract = { We propose to use wearable computers and sensor systems to generate personal contextual annotations in audio visual recordings of meetings. In this paper we argue that such annotations are essential and effective to allow retrieval of relevant information from large audio-visual databases. The paper proposes several useful annotations that can be derived from cheap and unobtrusive sensors. It also describes a hardware platform designed to implement this concept and presents first experimental results.},
author = {Kern, Nicky and Schiele, Bernt and Junker, Holger and Lukowicz, Paul and Troster, Gerhard},
booktitle = {Proceedings - International Symposium on Wearable Computers, ISWC},
doi = {10.1109/ISWC.2002.1167247},
isbn = {0769518168},
issn = {15504816},
keywords = {Accelerometers,Audio databases,Audio recording,Biosensors,Computer vision,Disk recording,Humans,Information retrieval,Wearable computers,Wearable sensors},
pages = {186--193},
title = {{Wearable sensing to annotate meeting recordings}},
volume = {2002-January},
year = {2002}
}

@article{Kymissis1998,
author = {Kymissis, J and Kendall, C and Paradiso, J},
file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Kymissis, Kendall, Paradiso - 1998 - Parasitic power harvesting in shoes.pdf:pdf},
journal = {, 1998. Digest of  {\ldots}},
title = {{Parasitic power harvesting in shoes}},
url = {http://ieeexplore.ieee.org/abstract/document/729539/},
year = {1998}
}

@article{Trappey2016,
author = {Trappey, AJC and Shen, W and Cha, JJ},
journal = {Journal of Systems Science and Systems},
title = {{Special issue editorial on advances in collaborative systems engineering for product design, production and service network}},
url = {http://link.springer.com/article/10.1007/s11518-016-5313-5},
year = {2016}
}


@inproceedings{Hidalgo1997,
abstract = {Hardware-Software partitioning is one of the most important issues of Codesign of embedded systems because it is made at the beginning of the cycle of design. In terms of costs and delays, final results will strongly depend on partitioning. In this work we address the functional partitioning problem of Hardware-Software Codesign using a genetic algorithm. Experimental results includes a comparative study with 3 algorithms such are Simulated Annealing, Fiduccia - Matheyses and a Modified version of this with an improvement of results.},
author = {Hidalgo, J. I. and Lanchares, J.},
booktitle = {Conference Proceedings of the EUROMICRO},
doi = {10.1109/EURMIC.1997.617393},
isbn = {0818681292},
issn = {10896503},
pages = {631--638},
title = {{Functional partitioning for hardware-software codesign using genetic algorithms}},
year = {1997}
}


@article{Wu2006,
abstract = {A low-complex algorithm is proposed for the hardware/software partitioning. The proposed algorithm employs dynamic programming principles while accounting for communication delays. It is shown that the time complexity of the latest algorithm has been reduced from O(n2ṡA) to O(nṡA), without increase in space complexity, for n code fragments and hardware area A. {\textcopyright} 2005 Elsevier B.V. All rights reserved.},
author = {Wu, Jigang and Srikanthan, Thambipillai},
doi = {10.1016/j.ipl.2005.12.008},
issn = {00200190},
journal = {Information Processing Letters},
keywords = {Algorithms,Complexity,Dynamic programming,Hardware/software partitioning},
number = {2},
pages = {41--46},
title = {{Low-complex dynamic programming algorithm for hardware/software partitioning}},
volume = {98},
year = {2006}
}

@article{Madsen1997,
abstract = {This paper describes the LYCOS system, an experimental co-synthesis environment. We present the motivation and philosophy of LYCOS and after an overview of the entire system, the individual parts are described. We use a single CPU, single ASIC target architecture and we describe the techniques we use to estimate metrics concerning hardware, software and communication in this architecture. Finally we present a novel partitioning technique called PACE, which has shown to produce excellent results, and we demonstrate how partitioning is used to do design space exploration.},
author = {Madsen, J and Grode, J and Knudsen, P V and Petersen, M E and Haxthausen, A},
doi = {10.1023/A:1008884219274},
issn = {0929-5585},
journal = {Design Automation for Embedded Systems},
number = {2},
pages = {195--235},
title = {{LYCOS: the Lyngby Co-Synthesis System}},
url = {http://dx.doi.org/10.1023/A:1008884219274},
volume = {2},
year = {1997}
}

@article{Strachacki2008,
author = {Strachacki, M},
journal = {Information Technology, 2008. IT 2008. 1st},
title = {{Speedup of branch and bound method for hardware/software partitioning}},
url = {http://ieeexplore.ieee.org/abstract/document/4621608/},
year = {2008}
}


@article{Jigang2004,
author = {Jigang, W and Thambipillai, S},
journal = {Signal Processing and Information},
title = {{A branch-and-bound algorithm for hardware/software partitioning}},
url = {http://ieeexplore.ieee.org/abstract/document/1434407/},
year = {2004}
}

@article{Niemann1997,
author = {Niemann, R and Marwedel, P},
file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Niemann, Marwedel - 1997 - An algorithm for hardwaresoftware partitioning using mixed integer linear programming.pdf:pdf},
journal = {Design Automation for Embedded Systems},
title = {{An algorithm for hardware/software partitioning using mixed integer linear programming}},
url = {http://www.springerlink.com/index/K45Q58P1U31458W7.pdf},
year = {1997}
}

@article{Arato2005,
abstract = {One of the most crucial steps in the design of embedded systems is hardware/software partitioning, is, deciding which components of the system should be implemented in hardware and which ones in software. Most formulations of the hardware/software partitioning problem are MP-hard, so the majority-of research efforts on hardware/software partitioning has focused on developing efficient heuristics. This article considers the combinatorial structure behind hardware/software partitioning. Two similar versions of the partitioning problem are defined, one of which turns out to be NP-hard, whereas the other one can be solved in polynomial time. This helps in understanding the real cause of complexity in hardware/software partitioning. Moreover, the polynomial-time algorithm serves as the basis for a highly efficient novel heuristic for the NP-hard version of the problem. Unlike general-purpose heuristics such as genetic algorithms or simulated annealing, this heuristic makes use of problem-specific knowledge, and can thus find high-quality solutions rapidly. Moreover, it has the unique characteristic that it also calculates lower bounds on the optimum solution. It is demonstrated on several benchmarks and also large random examples that the new algorithm clearly outperforms other heuristics that are generally applied to hardware/software partitioning.},
author = {Arato, P. and Mann, Z. A. and Orban, A.},
doi = {10.1145/1044111.1044119},
issn = {1084-4309},
journal = {Acm Transactions on Design Automation of Electronic Systems},
number = {1},
pages = {136--156},
title = {{Algorithmic aspects of hardware/software partitioning}},
volume = {10},
year = {2005}
}

@inproceedings{Arato2003,
abstract = {One of the most crucial steps in the design of embedded systems is hardware-software partitioning, i.e. deciding which components of the system are implemented in hardware and which ones in software. Different versions of the partitioning problem are defined, corresponding to real-time systems, and cost-constrained systems, respectively. The authors provide a formal mathematic analysis of the complexity of the problems: it is proven that they are NP-hard in the general case, and some efficiently solvable special cases are also presented. An ILP (integer linear programming) based approach is presented that are solving the problem optimally even for quite big systems, and a genetic algorithm (GA) that finds near-optimal solutions for even larger systems. A specialty of the GA is that nonvalid individuals are also allowed, but punished by the fitness function.},
author = {Arat{\'{o}}, P{\'{e}}ter and Juh{\'{a}}sz, S{\'{a}}ndor and Mann, Zolt{\'{a}}n {\'{A}}d{\'{a}}m and Orb{\'{a}}n, Andr{\'{a}}s and Papp, D{\'{a}}vid},
booktitle = {2003 IEEE International Symposium on Intelligent Signal Processing: From Classical Measurement to Computing with Perceptions, WISP 2003 - Proceedings},
doi = {10.1109/ISP.2003.1275838},
isbn = {0780378644},
keywords = {Genetic algorithm,Graph partitioning,Hardware/software codesign,Hardware/software partitioning,Integer linear programming},
mendeley-groups = {Partitioning},
pages = {197--202},
title = {{Hardware-software partitioning in embedded system design}},
year = {2003}
}


@article{Mann2007,
author = {Mann, Z{\'{A}} and Orb{\'{a}}n, A and Arat{\'{o}}, P{\'{e}}ter},
file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Mann, Orb{\'{a}}n, Arat{\'{o}} - 2007 - Finding optimal hardwaresoftware partitions.pdf:pdf},
journal = {Formal Methods in System Design},
title = {{Finding optimal hardware/software partitions}},
url = {http://www.springerlink.com/index/C73P1G152L286187.pdf},
year = {2007}
}


@article{Brown1996,
abstract = {This article provides a tutorial survey of architectures of commercially available high-capacity field-programmable devices (FPDs), and gives a summary of recent research results in the field. In the survey section, we first define the relevant terminology in the field and then describe the recent evolution of FPDs. The three main categories of FPDs are delineated: Simple PLDs (SPLDs), Complex PLDs (CPLDs) and Field-Programmable Gate Arrays (FPGAs). We then give details of the architectures of all of the most important commercially available chips. The second part of the article gives an overview of the most important research results on FPD architecture over the past six years, and provides suggestions as to features that may be included in future architectures.},
author = {Brown, Stephen and Rose, Jonathan},
doi = {10.1109/54.500200},
isbn = {0740-7475 VO  - 13},
issn = {07407475},
journal = {IEEE Design and Test of Computers},
number = {2},
pages = {42--56},
title = {{FPGA and CPLD architectures: A tutorial}},
volume = {13},
year = {1996}
}

@article{Smith1998,
author = {Smith, DJ and By-Zamfirescu, A Foreword},
title = {{HDL Chip Design: A practical guide for designing, synthesizing and simulating ASICs and FPGAs using VHDL or Verilog}},
url = {http://dl.acm.org/citation.cfm?id=551302},
year = {1998}
}

@inproceedings{Graham1982,
   abstract = {Large complex programs are composed of many small routines that implement abstractions for the routines that call them. To be useful, an execution profiler must attribute execution time in a way that is significant for the logical structure of a program as well as for its textual decomposition. This data must then be displayed to the user in a convenient and informative way. The gprof profiler accounts for the running time of called routines in the running time of the routines that call them. The design and use of this profiler is described.},
   address = {New York, New York, USA},
   author = {Graham, Susan L. and Kessler, Peter B. and Mckusick, Marshall K.},
   booktitle = {Proceedings of the 1982 SIGPLAN symposium on Compiler construction - SIGPLAN '82},
   doi = {10.1145/800230.806987},
   file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Graham et al. - 1982 - Gprof.pdf:pdf},
   isbn = {0897910745},
   issn = {0362-1340},
   number = {6},
   pages = {120--126},
   publisher = {ACM Press},
   title = {{Gprof: A call graph execution profiler}},
   url = {http://portal.acm.org/citation.cfm?doid=800230.806987},
   volume = {17},
   year = {1982}
}


@article{Edwards1994,
author = {Edwards, M and Forrest, J},
journal = {and Test Conference, 1994. EDAC, The {\ldots}},
mendeley-groups = {Baixar},
title = {{A development environment for the cosynthesis of embedded software/hardware systems}},
url = {http://ieeexplore.ieee.org/abstract/document/326834/},
year = {1994}
}

@inproceedings{Hardt1995,
abstract = {Embedded system design faces the HW/SW-partitioning problem. This is often solved by explicit designer decisions. We describe a partitioning method based on design specification analysis. Static and dynamic aspects influence the overall time behavior and are examined during two analysis phases. Each phase evaluates a cost function and classifies the suitability of the regarded partition for HW-implementation. Furthermore costs of the HW/SW-interface are taken into account because this overhead may not be neglected. The analysis method is demonstrated by several benchmarks and reasonable results are pointed out. It has also been pointed out that the efficiency of embedded systems is dramatically influenced by the interface between HW- and SW. We developed a pipelined interface using the features of the target architecture. The interface allows handling of multiple HW-components and parameter transfer is quick and flexible},
author = {Hardt, W},
booktitle = {IEE Colloquium on Partitioning in Hardware-Software Codesigns},
doi = {10.1049/ic:19950170},
issn = {09633308},
number = {figure 1},
pages = {4},
title = {{An automated approach to HW/SW-codesign}},
url = {http://link.aip.org/link/IEESEM/v1995/i32/p4/s1{\&}Agg=doi},
year = {1995}
}

@article{Wolf1994,
abstract = {This paper surveys the design of embedded computer systems, which use software running on programmable computers to implement system functions. Creating an embedded computer system which meets its performance, cost, and design time goals is a hardware-software co-design problem-the design of the hardware and software components influence each other. This paper emphasizes a historical approach to show the relationships between well-understood design problems and the as-yet unsolved problems in co-design. We describe the relationship between hardware and software architecture in the early stages of embedded system design. We describe analysis techniques for hardware and software relevant to the architectural choices required for hardware-software co-design. We also describe design and synthesis techniques for co-design and related problems},
author = {Wolf, Wayne H. W.H.},
doi = {10.1109/5.293155},
isbn = {0792399366},
issn = {00189219},
journal = {Proceedings of the IEEE},
mendeley-groups = {Partitioning},
number = {7},
pages = {967--989},
title = {{Hardware-software co-design of embedded systems}},
volume = {82},
year = {1994}
}

@article{Jozwiak2017,
author = {J{\'{o}}{\'{z}}wiak, L},
journal = {Microprocessors and Microsystems},
title = {{Advanced mobile and wearable systems}},
url = {http://www.sciencedirect.com/science/article/pii/S0141933117300741},
year = {2017}
}


@article{Trindade2016,
author = {Trindade, Alessandro B. and Cordeiro, Lucas C.},
doi = {10.1007/s10617-015-9163-z},
file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Trindade, Cordeiro - 2016 - Applying SMT-based verification to hardwaresoftware partitioning in embedded systems.pdf:pdf},
issn = {0929-5585},
journal = {Design Automation for Embedded Systems},
month = {mar},
number = {1},
pages = {1--19},
publisher = {Springer US},
title = {{Applying SMT-based verification to hardware/software partitioning in embedded systems}},
url = {http://link.springer.com/10.1007/s10617-015-9163-z},
volume = {20},
year = {2016}
}


@misc{RobvanderMeulen2015,
author = {{Rob van der Meulen}},
booktitle = {Gartner},
pages = {1},
title = {{Gartner Says 6.4 Billion Connected "Things" Will Be in Use in 2016, Up 30 Percent From 2015}},
url = {http://www.gartner.com/newsroom/id/3165317},
urldate = {2017-06-12},
year = {2015}
}

@article{Wang2016,
abstract = {Automatic hardware/software partitioning relies on characterization, estimation and design space exploration of the system performance and cost metrics. In real world situations, such estimates are complicated and cannot be 100 percent accurate. Furthermore, hardware/software co-design is so complicated nowadays that simply considering the bipartitioning between hardware and software is not sufficient. It is important to consider some of the other key design parameters and resource sharing together with the hardware/software partitioning problem. Under variable requirements of smart systems, more flexibility on the resource usage should be incorporated in system modelling. This paper considers uncertainty modeling for system partitioning with an enhanced set of parameters for hardware/software resource sharing. We harness state-of-the-art uncertainty theory for linear uncertain distribution and normal uncertain distribution. Our derivations convert the uncertainty model back to a regular constraint optimization problem. Experimental results show the effectiveness of our approach.},
author = {Wang, Rui and Hung, William N. N. and Yang, Guowu and Song, Xiaoyu},
doi = {10.1109/TC.2016.2519895},
file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Wang et al. - 2016 - Uncertainty Model for Configurable HardwareSoftware and Resource Partitioning.pdf:pdf},
isbn = {0018-9340},
issn = {00189340},
journal = {IEEE Transactions on Computers},
keywords = {Uncertainty model,hardware/software partitioning,resource partitioning,resource sharing},
month = {oct},
number = {10},
pages = {3217--3223},
title = {{Uncertainty model for configurable hardware/software and resource partitioning}},
url = {http://ieeexplore.ieee.org/document/7387705/},
volume = {65},
year = {2016}
}

@article{Choi2016,
author = {Choi, Jongsok},
file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/choi2016.pdf:pdf;:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Choi{\_}Jongsok{\_}201611{\_}PhD{\_}thesis.pdf:pdf},
isbn = {9781479921980},
title = {{From Software Threads to Parallel Hardware with LegUp High-Level Synthesis}},
url = {http://search.proquest.com/openview/f3708284b8a4583de0daf686f891b0ae/1?pq-origsite=gscholar{\&}cbl=18750{\&}diss=y},
year = {2016}
}

@article{Lo2009,
abstract = {Monte Carlo (MC) simulations are being used extensively in the field of medical biophysics, particularly for modeling light propagation in tissues. The high computation time for MC limits its use to solving only the forward solutions for a given source geometry, emission profile, and optical interaction coefficients of the tissue. However, applications such as photodynamic therapy treatment planning or image reconstruction in diffuse optical tomography require solving the inverse problem given a desired dose distribution or absorber distribution, respectively. A faster means for performing MC simulations would enable the use of MC-based models for accomplishing such tasks. To explore this possibility, a digital hardware implementation of a MC simulation based on the Monte Carlo for Multi-Layered media (MCML) software was implemented on a development platform with multiple field-programmable gate arrays (FPGAs). The hardware performed the MC simulation on average 80 times faster and was 45 times more energy efficient than the MCML software executed on a 3-GHz Intel Xeon processor. The resulting isofluence lines closely matched those produced by MCML in software, diverging by only less than 0.1 mm for fluence levels as low as 0.00001 cm(-2) in a skin model.},
author = {Lo, William Chun Yip and Redmond, Keith and Luu, Jason and Chow, Paul and Rose, Jonathan and Lilge, Lothar},
doi = {10.1117/1.3080134},
issn = {10833668},
journal = {Journal of Biomedical Optics},
number = {1},
pages = {014019},
pmid = {19256707},
title = {{Hardware acceleration of a Monte Carlo simulation for photodynamic treatment planning}},
url = {http://biomedicaloptics.spiedigitallibrary.org/article.aspx?doi=10.1117/1.3080134},
volume = {14},
year = {2009}
}

@article{Cong2009,
abstract = {Lithography simulation, an essential step in design for manufacturability (DFM), is still far from computationally efficient. Most leading companies use large clusters of server computers to achieve acceptable turn-around time. Thus coprocessor acceleration is very attractive for obtaining increased computational performance with a reduced power consumption. This article describes the implementation of a customized accelerator on FPGA using a polygon-based simulation model. An application-specific memory partitioning scheme is designed to meet the bandwidth requirements for a large number of processing elements. Deep loop pipelining and ping-pong buffer based function block pipelining are also implemented in our design. Initial results show a 15X speedup versus the software implementation running on a microprocessor, and more speedup is expected via further performance tuning. The implementation also leverages state-of-art C-to-RTL synthesis tools. At the same time, we also identify the need for manual architecture-level exploration for parallel implementations. Moreover, we implement the algorithm on NVIDIA GPUs using the CUDA programming environment, and provide some useful comparisons for different kinds of accelerators.},
author = {Cong, Jason and Zou, Yi},
doi = {10.1145/1575774.1575776},
file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Cong, Zou - 2009 - FPGA-Based Hardware Acceleration of Lithographic Aerial Image Simulation(2).pdf:pdf},
isbn = {9781595939340},
issn = {19367406},
journal = {ACM Transactions on Reconfigurable Technology and Systems},
keywords = {FPGA,Lithography simulation,coprocessor acceleration},
month = {sep},
number = {3},
pages = {1--29},
publisher = {ACM},
title = {{FPGA-Based Hardware Acceleration of Lithographic Aerial Image Simulation}},
url = {http://portal.acm.org/citation.cfm?doid=1575774.1575776 http://dl.acm.org/citation.cfm?id=1575774.1575776},
volume = {2},
year = {2009}
}


@article{Zhang2008,
abstract = {Hardware/software codesign is the main approach to designing the embedded systems. One of the primary steps of the hardware/software codesign is the hardware/software partitioning. A good partitioning scheme is a tradeoff of some constraints, such as power, size, performance, and so on. Inspired by both negative selection model and evolutionary mechanism of the biological immune system, an evolutionary negative selection algorithm for hardware/software partitioning, namely ENSA-HSP, is proposed in this paper. This ENSA-HSP algorithm is proved to be convergent, and its ability to escape from the local optimum is also analyzed. The experimental results demonstrate that ENSA-HSP is more efficient than traditional evolutionary algorithm.},
author = {Zhang, Yiguo and Luo, Wenjian and Zhang, Zeming and Li, Bin and Wang, Xufa},
doi = {10.1016/j.asoc.2007.03.003},
issn = {15684946},
journal = {Applied Soft Computing},
keywords = {artificial immune system,evolutionary algorithm,hardware,negative selection,software partitioning},
number = {1},
pages = {383--391},
title = {{A hardware/software partitioning algorithm based on artificial immune principles}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S1568494607000257},
volume = {8},
year = {2008}
}

@inproceedings{Zhang2008a,
abstract = {FPGAs are becoming an attractive platform for accelerating many computations including scientific applications. However, their adoption has been limited by the large development cost and short life span of FPGA designs. We believe that FPGA-based scientific computation would become far more practical if there were hardware libraries that were portable to any FPGA with performance that could scale with the resources of the FPGA. To illustrate this idea we have implemented one common supercomputing library function: the LU factorization method for solving linear systems. This paper discusses issues in making the design both portable and scalable. The design is automatically generated to match the FPGApsilas capabilities and external memory through the use of parameters. We compared the performance of the design on the FPGA to a single processor core and found that it performs 2.2 times faster, and that the energy dissipated per computation is a factor 5 times less.},
author = {Zhang, Wei and Betz, Vaughn and Rose, Jonathan},
booktitle = {Proceedings of the 2008 International Conference on Field-Programmable Technology, ICFPT 2008},
doi = {10.1109/FPT.2008.4762361},
file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Zhang, Betz, Rose - 2012 - Portable and scalable FPGA-based acceleration of a direct linear system solver.pdf:pdf},
isbn = {9781424427963},
issn = {19367406},
keywords = {FPGA,LU decomposition,acceleration,linear system solver,portable,scalable},
month = {mar},
number = {1},
pages = {17--24},
publisher = {ACM},
title = {{Portable and scalable FPGA-based acceleration of a direct linear system solver}},
url = {http://dl.acm.org/citation.cfm?doid=2133352.2133358},
volume = {5},
year = {2008}
}
@article{Putnam2014,
abstract = {Datacenter workloads demand high computational capabili- ties, flexibility, power efficiency, and low cost. It is challenging to improve all of these factors simultaneously. To advance dat- acenter capabilities beyond what commodity server designs can provide, we have designed and built a composable, recon- figurable fabric to accelerate portions of large-scale software services. Each instantiation of the fabric consists of a 6x8 2-D torus of high-end Stratix V FPGAs embedded into a half-rack of 48 machines. One FPGA is placed into each server, acces- sible through PCIe, and wired directly to other FPGAs with pairs of 10 Gb SAS cables. In this paper, we describe a medium-scale deployment of this fabric on a bed of 1,632 servers, and measure its efficacy in accelerating the Bing web search engine. We describe the requirements and architecture of the system, detail the critical engineering challenges and solutions needed to make the system robust in the presence of failures, and measure the performance, power, and resilience of the system when ranking candidate documents. Under high load, the large- scale reconfigurable fabric improves the ranking throughput of each server by a factor of 95{\%} for a fixed latency distribution— or, while maintaining equivalent throughput, reduces the tail latency by 29{\%}.},
author = {Putnam, A and Others},
doi = {10.1109/ISCA.2014.6853195},
file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Putnam, Others - 2014 - A Reconfigurable Fabric for Accelerating Large-Scale Datacenter Services.pdf:pdf},
isbn = {9781479943944},
issn = {0272-1732},
journal = {Isca'14},
keywords = {computer centres,field programmable gate arrays,se},
pages = {13--24},
title = {{A Reconfigurable Fabric for Accelerating Large-Scale Datacenter Services}},
url = {http://dl.acm.org/citation.cfm?id=2996868},
year = {2014}
}

@misc{Maan2015,
author = {Maan, Lehar and Baker, Liana},
booktitle = {Routers},
pages = {1},
title = {{Intel to buy Altera for {\$}16.7 billion in its biggest deal ever | Reuters}},
url = {http://www.reuters.com/article/us-altera-m-a-intel-idUSKBN0OH2E020150601},
urldate = {2017-06-15},
year = {2015}
}


@article{Trevett2008,
author = {Trevett, Neil},
issn = {87563282},
journal = {Group},
number = {November},
title = {{OpenCL: The open standard for heterogeneous parallel programming}},
url = {https://www.khronos.org/opencl/},
year = {2008}
}
@misc{openmp,
abstract = {The collection of compiler directives, library routines, and environment variables described in this document collectively define the specification of the OpenMP Application Program Interface (OpenMP API) for parallelism in C, C++ and Fortran programs. This specification provides a model for parallel programming that is portable across architectures from different vendors. Compilers from numerous vendors support the OpenMP API. More information about the OpenMP API can be found at the following web site http://www.openmp.org The directives, library routines, and environment variables defined in this document allow users to create and to manage parallel programs while permitting portability. The directives extend the C, C++ and Fortran base languages with single program multiple data (SPMD) constructs, tasking constructs, device constructs, worksharing constructs, and synchronization constructs, and they provide support for sharing, mapping and privatizing data. The functionality to control the runtime environment is provided by library routines and environment variables. Compilers that support the OpenMP API often include a command line option to the compiler that activates and allows interpretation of all OpenMP directives.},
pages = {359},
title = {{The OpenMP API specification for parallel programming}},
url = {http://www.openmp.org/ http://www.openmp.org/wp-content/uploads/openmp-4.5.pdf},
year = {2015}
}
@article{Barney2009,
author = {Barney, B},
file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Barney - 2009 - POSIX threads programming.pdf:pdf},
journal = {Laboratory. Dispon{\'{i}}vel em:{\textless} https://computing. llnl.  {\ldots}},
title = {{POSIX threads programming}},
url = {http://delta.cs.cinvestav.mx/{~}fraga/Cursos/SistemasOperativos/2015/POSIXthreads.pdf},
year = {2009}
}


@inproceedings{Guthaus2001,
abstract = {This paper examines a set of commercially representative embedded programs and compares them to an existing benchmark suite, SPEC2000. A new version of SimpleScalar that has been adapted to the ARM instruction set is used to characterize the performance of the benchmarks using configurations similar to current and next generation embedded processors. Several characteristics distinguish the representative embedded programs from the existing SPEC benchmarks including instruction distribution, memory behavior, and available parallelism. The embedded benchmarks, called MiBench, are freely available to all researchers.},
author = {Guthaus, M. R. and Ringenberg, J. S. and Ernst, D. and Austin, T. M. and Mudge, T. and Brown, R. B.},
booktitle = {2001 IEEE International Workshop on Workload Characterization, WWC 2001},
doi = {10.1109/WWC.2001.990739},
file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Guthaus et al. - Unknown - MiBench A free, commercially representative embedded benchmark suite.pdf:pdf},
isbn = {0780373154},
pages = {3--14},
publisher = {IEEE},
title = {{MiBench: A free, commercially representative embedded benchmark suite}},
url = {http://ieeexplore.ieee.org/document/990739/},
year = {2001}
}


@book{Hennessy2011,
author = {Hennessy, John L and Patterson, David A},
file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Hennessy, Patterson - 2011 - Computer architecture a quantitative approach.pdf:pdf},
title = {{Computer architecture: a quantitative approach}},
url = {https://books.google.com.br/books?hl=pt-BR{\&}lr={\&}id=gQ-fSqbLfFoC{\&}oi=fnd{\&}pg=PP1{\&}dq=quantitative+archtecture{\&}ots=mXAuKJX3qn{\&}sig=E7{\_}UQzqEFm5Fum4Tpg2GdMzI1TA},
publisher={Elsevier},
year = {2011}
}


@article{Case1995,
author = {Case, B},
journal = {The Microprocessor Report},
title = {{Spec2000 retires spec92}},
url = {https://scholar.google.com.br/scholar?q=SPEC2000+Retires+SPEC92{\&}btnG={\&}hl=pt-BR{\&}as{\_}sdt=0{\%}2C5},
volume = {9},
year = {1995}
}


@article{Canis2011,
   abstract = {In this paper, we introduce a new open source high-level synthesis tool called LegUp that allows software techniques to be used for hardware design. LegUp accepts a standard C program as input and automatically compiles the program to a hybrid architecture containing an FPGA-based MIPS soft processor and custom hardware accelerators that communicate through a standard bus interface. Results show that the tool produces hardware solutions of comparable quality to a commercial high-level synthesis tool.},
   author = {Canis, Andrew and Choi, Jongsok and Aldham, Mark and Zhang, Victor and Kammoona, Ahmed and Anderson, Jason H. and Brown, Stephen and Czajkowski, Tomasz},
   doi = {10.1145/1950413.1950423},
   isbn = {9781450305549},
   journal = {Proceedings of the 19th ACM/SIGDA international symposium on Field programmable gate arrays - FPGA '11},
   pages = {33},
   title = {{LegUp: High-Level Synthesis for FPGA-Based Processor/Accelerator Systems}},
   url = {http://portal.acm.org/citation.cfm?doid=1950413.1950423},
   year = {2011}
}


@inproceedings{Fort2014,
   abstract = {LegUp [1] is an open-source high-level synthesis (HLS) tool that accepts a C program as input and automatically synthesizes it into a hybrid system. The hybrid system comprises an embedded processor and custom accelerators that realize user-designated compute-intensive parts of the program with improved throughput and energy efficiency. In this paper, we overview the LegUp framework and describe several recent developments: 1) support for an embedded ARM processor, as is available on Altera's recently released SoC FPGA, 2) HLS support for software parallelization schemes -- pthreads and OpenMP, 3) enhancements to LegUp's core HLS algorithms that raise the quality of the auto-generated hardware, and, 4) a preliminary debugging and verification framework providing C source-level debugging of HLS hardware. Since its first release in 2011, LegUp has been downloaded over 1000 times by groups around the world, providing a powerful platform for new research in high-level synthesis algorithms and embedded systems design.},
   author = {Fort, Blair and Canis, Andrew and Choi, Jongsok and Calagar, Nazanin and Lian, Ruolong and Hadjis, Stefan and Chen, Yu Ting and Hall, Mathew and Syrowik, Bain and Czajkowski, Tomasz and Brown, Stephen and Anderson, Jason},
   booktitle = {Proceedings - 2014 International Conference on Embedded and Ubiquitous Computing, EUC 2014},
   doi = {10.1109/EUC.2014.26},
   isbn = {9780769552491},
   keywords = {FPGAs,High-level synthesis,accelerators,embedded systems,performance,scheduling},
   pages = {120--129},
   title = {{Automating the Design of Processor/Accelerator Embedded Systems with LegUp High-Level Synthesis}},
   year = {2014}
}


@article{Stone2010,
   abstract = {The OpenCL standard offers a common API for program execution on systems composed of different types of computational devices such as multicore CPUs, GPUs, or other accelerators.},
   author = {Stone, John E. and Gohara, David and Shi, Guochun},
   doi = {10.1109/MCSE.2010.69},
   isbn = {1521-9615 VO - 12},
   issn = {15219615},
   journal = {Computing in Science and Engineering},
   number = {3},
   pages = {66--72},
   pmid = {21037981},
   title = {{OpenCL: A parallel programming standard for heterogeneous computing systems}},
   volume = {12},
   year = {2010}
}

@inproceedings{Shagrithaya2013,
   abstract = {High-level FPGA synthesis tools aim to increase the productivity of FPGAs and to adopt them among software developers and domain experts. OpenCL is a specification introduced for parallel programming across heterogeneous platforms. In this paper, an automated compilation flow to generate customized application-specific hardware descriptions from OpenCL computation kernels is reported. The flow uses Xilinx AutoESL tool to obtain the design specification for OpenCL kernel cores. The provided architecture integrates generated cores with memory and OpenCL host application interfaces. The host program in the OpenCL application is compiled and executed to demonstrate a proof-of-concept implementation towards achieving an end-to-end flow that provides abstraction of hardware at the front-end.},
   author = {Shagrithaya, Kavya and Kepa, Krzysztof and Athanas, Peter},
   booktitle = {Proceedings of the International Conference on Application-Specific Systems, Architectures and Processors},
   doi = {10.1109/ASAP.2013.6567546},
   isbn = {9781479904921},
   issn = {10636862},
   keywords = {AutoESL,Convey,FPGA,HPC,OpenCL,Vivado,source-to-source translation},
   pages = {26--30},
   title = {{Enabling development of OpenCL applications on FPGA platforms}},
   year = {2013}
}


@inproceedings{Czajkowski2012,
   abstract = {We present an OpenCL compilation framework to generate high-performance hardware for FPGAs. For an OpenCL application comprising a host program and a set of kernels, it compiles the host program, generates Verilog HDL for each kernel, compiles the circuit using Altera Complete Design Suite 12.0, and downloads the compiled design onto an FPGA.We can then run the application by executing the host program on a Windows(tm)-based machine, which communicates with kernels on an FPGA using a PCIe interface. We implement four applications on an Altera Stratix IV and present the throughput and area results for each application. We show that we can achieve a clock frequency in excess of 160MHz on our benchmarks, and that OpenCL computing paradigm is a viable design entry method for high-performance computing applications on FPGAs.},
   author = {Czajkowski, Tomasz S. and Aydonat, Utku and Denisenko, Dmitry and Freeman, John and Kinsner, Michael and Neto, David and Wong, Jason and Yiannacouras, Peter and Singh, Deshanand P.},
   booktitle = {Proceedings - 22nd International Conference on Field Programmable Logic and Applications, FPL 2012},
   doi = {10.1109/FPL.2012.6339272},
   isbn = {9781467322560},
   pages = {531--534},
   title = {{From OpenCL to high-performance hardware on FPGAs}},
   year = {2012}
}

@article{Abdelhedi2016,
   abstract = {Falls can lead to serious injuries, hospitalization and sometimes death, and are considered the number one cause of disabilities among elderly people, making falls a key concern in the healthcare sector. Advances in medical technology and healthcare mechanisms have driven the development of new responses to the healthcare needs of a growing elderly population. Ambulatory accelerometer devices have been applied to develop reliable and robust fall detection systems. This paper assesses fall detection systems using Field Programmable Gate Arrays (FPGAs) as a CPU in addition to data transmission. In this paper, we give a survey of the different fall detection systems based on FPGAs in the literature, definition of the main theoretical points of fall detection accelerometers-based systems, existing techniques and algorithms and we give an overview of the main steps to design a fall detection system.},
   author = {Abdelhedi, Sahar and Bourguiba, Riad and Mouine, Jaouhar and Youssef, Anis},
   doi = {10.5875/ausmt.v6i4.1105},
   file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Sahar et al. - 2016 - Fall Detection FPGA-Based Systems A Survey.pdf:pdf},
   issn = {22239766},
   journal = {International Journal of Automation and Smart Technology},
   keywords = {accelerometers,embedded systems,fall detection,fpga,health-monitoring},
   month = {dec},
   number = {4},
   pages = {191--202},
   title = {{Fall Detection FPGA-Based Systems : A Survey}},
   url = {http://www.ausmt.org/index.php/AUSMT/article/view/1105},
   volume = {6},
   year = {2016}
}

@article{Ahola2007,
   abstract = {A new wearable sensor platform has been devel- oped. It is based on a Field Programmable Gate Array (FPGA) device. Because of this the hardware is very flexible and gives the platform unique opportunities for research of a wide range of architectures, applications and signal processing algorithms. The platform has been named NWSP, for Nokia Wrist–Attached Sensor Platform. This document describes the hardware, the firmware and applications of the platform. I.},
   author = {Ahola, Tom and Korpinen, Pekka and Rakkola, Juha and Teemu, R},
   doi = {10.1109/IEMBS.2007.4352782},
   file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Ahola et al. - 2007 - Wearable FPGA Based Wireless Sensor Platform.pdf:pdf},
   isbn = {1424407885},
   issn = {1557-170X},
   journal = {Proceedings of the 29th Annual International Conference of the IEEE EMBS},
   month = {aug},
   pages = {2288--2291},
   pmid = {18002448},
   publisher = {IEEE},
   title = {{Wearable FPGA Based Wireless Sensor Platform}},
   url = {http://ieeexplore.ieee.org/document/4352782/},
   year = {2007}
}


@article{Narumi2016,
   author = {Narumi, T},
   journal = {The Fifth International Conference on Informatics and},
   title = {{An FPGA-Based Tiled Display System for a Wearable Display}},
   url = {https://www.researchgate.net/profile/Natalie{\_}Walker4/publication/310753834{\_}Proceedings{\_}of{\_}the{\_}Fifth{\_}International{\_}Conference{\_}on{\_}Informatics{\_}and{\_}Applications{\_}Takamatsu-Japan{\_}2016/links/5835e29608ae74bb3aa25cff/Proceedings-of-the-Fifth-International-Conference-on-Informatics-and-Applications-Takamatsu-Japan-2016.pdf{\#}page=14},
   year = {2016}
}


@article{Lee2015,
   author = {Lee, Bongkyu},
   journal = {Journal of Korea Multimedia Society},
   keywords = {face recognition,fpga,soc,wearable},
   number = {2},
   pages = {244--252},
   title = {{Design and Implementation of a Face Recognition System-on-a-Chip for Wearable / Mobile Applications}},
   url = {http://www.kpubs.org/article/articleDownload.kpubs?downType=pdf{\&}articleANo=MTMDCW{\_}2015{\_}v18n2{\_}244},
   volume = {18},
   year = {2015}
}

@inproceedings{Gemperle1998,
   abstract = {Digital Technology is constantly improving as information becomes wireless. These advances demand more wearable and mobile form factors for products that access information. A product that is wearable should have wearability. This paper explores the concept of dynamic wearability, through design research. Wearability is defined as the interaction between the human body and the wearable object. Dynamic wearability extends that definition to include the human body in motion. Our research has been to locate, understand, and define the spaces on the human body where solid and flexible forms can rest-without interfering with fluid human movement. The result is a set of design guidelines embodied in a set of wearable forms. These wearable forms describe the three dimensional spaces on the body best suited for comfortable and unobtrusive wearability by design.},
   author = {Gemperle, F. and Kasabach, C. and Stivoric, J. and Bauer, M. and Martin, R.},
   booktitle = {Digest of Papers. Second International Symposium on Wearable Computers (Cat. No.98EX215)},
   doi = {10.1109/ISWC.1998.729537},
   file = {:Users/pripyat/Library/Application Support/Mendeley Desktop/Downloaded/Gemperle et al. - Unknown - Design for wearability.pdf:pdf},
   isbn = {0-8186-9074-7},
   issn = {Gemperle1998},
   keywords = {Design engineering,Electrical capacitance tomography,Fluid dynamics,Guidelines,Humans,Microwave integrated circuits,Solids,Space technology,Systems engineering and theory,Wearable computers,design for wearability,design research,dynamic wearability,mobile form factors,portable computers},
   pages = {116--122},
   publisher = {IEEE Comput. Soc},
   title = {{Design for wearability}},
   url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=729537 http://ieeexplore.ieee.org/document/729537/},
   year = {1998}
}

@book{Richardson2013,
   abstract = {Many people think of Linux as a computer operating system, running on users' desktops and powering servers. But Linux can also be found inside many consumer electronics devices. Whether they're the brains of a cell phone, cable box, or exercise bike, embedded Linux systems blur the distinction between computer and device. Many makers love microcontroller platforms such as Arduino, but as the complexity increases in their projects, they need more power for applications, such as computer vision. The BeagleBone is an embedded Linux board for makers. It's got built-in networking, many inputs and outputs, and a fast processor to handle demanding tasks. This book introduces you to both the original BeagleBone and the new BeagleBone Black and gets you started with projects that take advantage of the board's processing power and its ability to interface with the outside world.},
   author = {Richardson, Matt},
   isbn = {1449345336},
   pages = {142},
   title = {{Getting Started with BeagleBone: Linux-Powered Electronic Projects With Python and JavaScript}},
   url = {https://books.google.com.br/books?hl=pt-BR{\&}lr={\&}id=g4ZmAgAAQBAJ{\&}oi=fnd{\&}pg=PT2{\&}dq=Getting+Started+with+BeagleBone{\&}ots=GAxKyyr-dQ{\&}sig=qm-mR33IWFQDrz0P3pwodx4Xf4g http://books.google.com/books?id=g4ZmAgAAQBAJ{\&}pgis=1},
   year = {2013}
}

@inproceedings{lee2016information,
   title={Information disclosure concerns in the age of wearable computing},
   author={Lee, Linda and Lee, J and Egelman, Serge and Wagner, David},
   booktitle={NDSS Workshop on Usable Security (USEC)},
   volume={1},
   year={2016}
}

@book{nemeth2004manual,
   title={Manual completo do Linux: guia do administrador},
   author={Nemeth, Evi and Hein, Trent R and Snyder, Garth},
   year={2004}
}
